ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Stop, %function
  23              	PWM_Stop:
  24              	.LFB5:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** 
  21:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM.c **** 
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM.c **** *
  28:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:.\Generated_Source\PSoC4/PWM.c **** *
  31:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 2


  33:.\Generated_Source\PSoC4/PWM.c **** *
  34:.\Generated_Source\PSoC4/PWM.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM.c **** *  None
  36:.\Generated_Source\PSoC4/PWM.c **** *
  37:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:.\Generated_Source\PSoC4/PWM.c **** {
  40:.\Generated_Source\PSoC4/PWM.c **** 
  41:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM.c ****         
  45:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM.c **** 
  48:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM.c ****         
  51:.\Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM.c **** 
  57:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM.c ****         
  60:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM.c ****     
  63:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM.c ****         
  66:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM.c **** 
  69:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM.c ****         #else
  84:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM.c **** 
  88:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 3


  90:.\Generated_Source\PSoC4/PWM.c **** 
  91:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM.c ****         #else
  95:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/PWM.c ****             
  97:.\Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM.c **** 
 107:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM.c **** 
 111:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM.c **** 
 115:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PWM.c ****     
 118:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM.c **** 
 121:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM.c ****         #else
 128:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM.c **** 
 136:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM.c **** 
 140:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM.c **** 
 145:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 4


 147:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PWM.c **** 
 149:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM.c **** 
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM.c ****     
 160:.\Generated_Source\PSoC4/PWM.c **** }
 161:.\Generated_Source\PSoC4/PWM.c **** 
 162:.\Generated_Source\PSoC4/PWM.c **** 
 163:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM.c **** *
 167:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:.\Generated_Source\PSoC4/PWM.c **** *
 170:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM.c **** *  None
 172:.\Generated_Source\PSoC4/PWM.c **** *
 173:.\Generated_Source\PSoC4/PWM.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM.c **** *  None
 175:.\Generated_Source\PSoC4/PWM.c **** *
 176:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:.\Generated_Source\PSoC4/PWM.c **** {
 179:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM.c **** 
 181:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 183:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/PWM.c **** 
 185:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 189:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM.c **** 
 192:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM.c **** }
 198:.\Generated_Source\PSoC4/PWM.c **** 
 199:.\Generated_Source\PSoC4/PWM.c **** 
 200:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 202:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 5


 204:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 206:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 207:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM.c **** *
 210:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM.c **** *  None
 212:.\Generated_Source\PSoC4/PWM.c **** *
 213:.\Generated_Source\PSoC4/PWM.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM.c **** *  None
 215:.\Generated_Source\PSoC4/PWM.c **** *
 216:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 222:.\Generated_Source\PSoC4/PWM.c **** *
 223:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 225:.\Generated_Source\PSoC4/PWM.c **** {
 226:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 227:.\Generated_Source\PSoC4/PWM.c ****     {
 228:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 229:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 230:.\Generated_Source\PSoC4/PWM.c ****     }
 231:.\Generated_Source\PSoC4/PWM.c **** 
 232:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 233:.\Generated_Source\PSoC4/PWM.c **** }
 234:.\Generated_Source\PSoC4/PWM.c **** 
 235:.\Generated_Source\PSoC4/PWM.c **** 
 236:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 238:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM.c **** *
 240:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 242:.\Generated_Source\PSoC4/PWM.c **** *
 243:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM.c **** *  None
 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM.c **** *  None
 248:.\Generated_Source\PSoC4/PWM.c **** *
 249:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 251:.\Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 251 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 252:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM.c **** 
 254:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 6


  32              		.loc 1 254 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 255:.\Generated_Source\PSoC4/PWM.c **** 
 256:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
  35              		.loc 1 256 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0121     		mov	r1, #1
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
 257:.\Generated_Source\PSoC4/PWM.c **** 
 258:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 258 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 259:.\Generated_Source\PSoC4/PWM.c **** }
  44              		.loc 1 259 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00002040 		.word	1075838976
  51              		.cfi_endproc
  52              	.LFE5:
  53              		.size	PWM_Stop, .-PWM_Stop
  54              		.section	.text.PWM_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	PWM_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	PWM_SetMode, %function
  60              	PWM_SetMode:
  61              	.LFB6:
 260:.\Generated_Source\PSoC4/PWM.c **** 
 261:.\Generated_Source\PSoC4/PWM.c **** 
 262:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 264:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 268:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM.c **** *
 271:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 273:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 7


 282:.\Generated_Source\PSoC4/PWM.c **** *
 283:.\Generated_Source\PSoC4/PWM.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM.c **** *  None
 285:.\Generated_Source\PSoC4/PWM.c **** *
 286:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM.c **** {
  62              		.loc 1 288 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 289:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM.c **** 
 291:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 291 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 292:.\Generated_Source\PSoC4/PWM.c **** 
 293:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
  73              		.loc 1 293 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
  79              		.loc 1 294 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 295:.\Generated_Source\PSoC4/PWM.c **** 
 296:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 296 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 297:.\Generated_Source\PSoC4/PWM.c **** }
  87              		.loc 1 297 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 00012040 		.word	1075839232
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE6:
  97              		.size	PWM_SetMode, .-PWM_SetMode
  98              		.section	.text.PWM_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	PWM_SetQDMode
 101              		.code	16
 102              		.thumb_func
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 8


 103              		.type	PWM_SetQDMode, %function
 104              	PWM_SetQDMode:
 105              	.LFB7:
 298:.\Generated_Source\PSoC4/PWM.c **** 
 299:.\Generated_Source\PSoC4/PWM.c **** 
 300:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 302:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM.c **** *
 304:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM.c **** *
 308:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM.c **** *
 316:.\Generated_Source\PSoC4/PWM.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM.c **** *  None
 318:.\Generated_Source\PSoC4/PWM.c **** *
 319:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM.c **** {
 106              		.loc 1 321 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 322:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM.c **** 
 324:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 324 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 325:.\Generated_Source\PSoC4/PWM.c **** 
 326:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 117              		.loc 1 326 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 123              		.loc 1 327 0
 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 328:.\Generated_Source\PSoC4/PWM.c **** 
 329:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 9


 128              		.loc 1 329 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 330:.\Generated_Source\PSoC4/PWM.c **** }
 131              		.loc 1 330 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 00012040 		.word	1075839232
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE7:
 141              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 142              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	PWM_SetPrescaler, %function
 148              	PWM_SetPrescaler:
 149              	.LFB8:
 331:.\Generated_Source\PSoC4/PWM.c **** 
 332:.\Generated_Source\PSoC4/PWM.c **** 
 333:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM.c **** *
 337:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM.c **** *
 341:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM.c **** *
 353:.\Generated_Source\PSoC4/PWM.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM.c **** *  None
 355:.\Generated_Source\PSoC4/PWM.c **** *
 356:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM.c **** {
 150              		.loc 1 358 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 10


 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 359:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM.c **** 
 361:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 361 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 362:.\Generated_Source\PSoC4/PWM.c **** 
 363:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 161              		.loc 1 363 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 167              		.loc 1 364 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 365:.\Generated_Source\PSoC4/PWM.c **** 
 366:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 366 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 367:.\Generated_Source\PSoC4/PWM.c **** }
 175              		.loc 1 367 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 00012040 		.word	1075839232
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE8:
 185              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 186              		.section	.text.PWM_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	PWM_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	PWM_SetOneShot, %function
 192              	PWM_SetOneShot:
 193              	.LFB9:
 368:.\Generated_Source\PSoC4/PWM.c **** 
 369:.\Generated_Source\PSoC4/PWM.c **** 
 370:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 372:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM.c **** *
 374:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 376:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 11


 378:.\Generated_Source\PSoC4/PWM.c **** *
 379:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM.c **** *
 385:.\Generated_Source\PSoC4/PWM.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM.c **** *  None
 387:.\Generated_Source\PSoC4/PWM.c **** *
 388:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM.c **** {
 194              		.loc 1 390 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 391:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM.c **** 
 393:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 393 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 394:.\Generated_Source\PSoC4/PWM.c **** 
 395:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 205              		.loc 1 395 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 211              		.loc 1 396 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 397:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM.c **** 
 399:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 399 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 400:.\Generated_Source\PSoC4/PWM.c **** }
 222              		.loc 1 400 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 12


 228 0024 00012040 		.word	1075839232
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE9:
 232              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 233              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_SetPWMMode, %function
 239              	PWM_SetPWMMode:
 240              	.LFB10:
 401:.\Generated_Source\PSoC4/PWM.c **** 
 402:.\Generated_Source\PSoC4/PWM.c **** 
 403:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM.c **** *
 407:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM.c **** *
 414:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM.c **** *
 439:.\Generated_Source\PSoC4/PWM.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM.c **** *  None
 441:.\Generated_Source\PSoC4/PWM.c **** *
 442:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 13


 241              		.loc 1 444 0
 242              		.cfi_startproc
 243              	.LVL18:
 445:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 244              		.loc 1 445 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/PWM.c **** }
 250              		.loc 1 446 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c 28012040 		.word	1075839272
 257              		.cfi_endproc
 258              	.LFE10:
 259              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 260              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	PWM_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	PWM_SetPWMSyncKill, %function
 266              	PWM_SetPWMSyncKill:
 267              	.LFB11:
 447:.\Generated_Source\PSoC4/PWM.c **** 
 448:.\Generated_Source\PSoC4/PWM.c **** 
 449:.\Generated_Source\PSoC4/PWM.c **** 
 450:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM.c **** *
 454:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM.c **** *
 460:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM.c **** *
 463:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM.c **** 
 468:.\Generated_Source\PSoC4/PWM.c **** *
 469:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 14


 475:.\Generated_Source\PSoC4/PWM.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM.c **** *  None
 477:.\Generated_Source\PSoC4/PWM.c **** *
 478:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM.c **** {
 268              		.loc 1 480 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 481:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM.c **** 
 483:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 483 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 484:.\Generated_Source\PSoC4/PWM.c **** 
 485:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 279              		.loc 1 485 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 285              		.loc 1 486 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0339     		sub	r1, r1, #3
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 487:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM.c **** 
 489:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 489 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 490:.\Generated_Source\PSoC4/PWM.c **** }
 296              		.loc 1 490 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 00012040 		.word	1075839232
 303              		.cfi_endproc
 304              	.LFE11:
 305              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 306              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_SetPWMStopOnKill
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 15


 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_SetPWMStopOnKill, %function
 312              	PWM_SetPWMStopOnKill:
 313              	.LFB12:
 491:.\Generated_Source\PSoC4/PWM.c **** 
 492:.\Generated_Source\PSoC4/PWM.c **** 
 493:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM.c **** *
 497:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM.c **** *
 502:.\Generated_Source\PSoC4/PWM.c **** *
 503:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM.c **** *
 509:.\Generated_Source\PSoC4/PWM.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM.c **** *  None
 511:.\Generated_Source\PSoC4/PWM.c **** *
 512:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM.c **** {
 314              		.loc 1 514 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 515:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM.c **** 
 517:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 517 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 518:.\Generated_Source\PSoC4/PWM.c **** 
 519:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 325              		.loc 1 519 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 331              		.loc 1 520 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0739     		sub	r1, r1, #7
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 16


 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 521:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM.c **** 
 523:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 523 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 524:.\Generated_Source\PSoC4/PWM.c **** }
 342              		.loc 1 524 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 00012040 		.word	1075839232
 349              		.cfi_endproc
 350              	.LFE12:
 351              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 352              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	PWM_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	PWM_SetPWMDeadTime, %function
 358              	PWM_SetPWMDeadTime:
 359              	.LFB13:
 525:.\Generated_Source\PSoC4/PWM.c **** 
 526:.\Generated_Source\PSoC4/PWM.c **** 
 527:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM.c **** *
 531:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM.c **** 
 537:.\Generated_Source\PSoC4/PWM.c **** *
 538:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM.c **** *
 542:.\Generated_Source\PSoC4/PWM.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM.c **** *  None
 544:.\Generated_Source\PSoC4/PWM.c **** *
 545:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM.c **** {
 360              		.loc 1 547 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 17


 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 548:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM.c **** 
 550:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 550 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 551:.\Generated_Source\PSoC4/PWM.c **** 
 552:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 371              		.loc 1 552 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 377              		.loc 1 553 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 554:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM.c **** 
 556:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 556 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 557:.\Generated_Source\PSoC4/PWM.c **** }
 387              		.loc 1 557 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 00012040 		.word	1075839232
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE13:
 397              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 398              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	PWM_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	PWM_SetPWMInvert, %function
 404              	PWM_SetPWMInvert:
 405              	.LFB14:
 558:.\Generated_Source\PSoC4/PWM.c **** 
 559:.\Generated_Source\PSoC4/PWM.c **** 
 560:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM.c **** *
 564:.\Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 18


 565:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM.c **** *
 569:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM.c **** *
 575:.\Generated_Source\PSoC4/PWM.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM.c **** *  None
 577:.\Generated_Source\PSoC4/PWM.c **** *
 578:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM.c **** {
 406              		.loc 1 580 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 581:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM.c **** 
 583:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 583 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 584:.\Generated_Source\PSoC4/PWM.c **** 
 585:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 417              		.loc 1 585 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 423              		.loc 1 586 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 587:.\Generated_Source\PSoC4/PWM.c **** 
 588:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 588 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 589:.\Generated_Source\PSoC4/PWM.c **** }
 431              		.loc 1 589 0
 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 00012040 		.word	1075839232
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 19


 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE14:
 441              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 442              		.section	.text.PWM_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	PWM_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	PWM_WriteCounter, %function
 448              	PWM_WriteCounter:
 449              	.LFB15:
 590:.\Generated_Source\PSoC4/PWM.c **** 
 591:.\Generated_Source\PSoC4/PWM.c **** 
 592:.\Generated_Source\PSoC4/PWM.c **** 
 593:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 595:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM.c **** *
 597:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM.c **** *
 602:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM.c **** *
 605:.\Generated_Source\PSoC4/PWM.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM.c **** *  None
 607:.\Generated_Source\PSoC4/PWM.c **** *
 608:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM.c **** {
 450              		.loc 1 610 0
 451              		.cfi_startproc
 452              	.LVL36:
 611:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 453              		.loc 1 611 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/PWM.c **** }
 459              		.loc 1 612 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 08012040 		.word	1075839240
 466              		.cfi_endproc
 467              	.LFE15:
 468              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 469              		.section	.text.PWM_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	PWM_ReadCounter
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 20


 472              		.code	16
 473              		.thumb_func
 474              		.type	PWM_ReadCounter, %function
 475              	PWM_ReadCounter:
 476              	.LFB16:
 613:.\Generated_Source\PSoC4/PWM.c **** 
 614:.\Generated_Source\PSoC4/PWM.c **** 
 615:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 617:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM.c **** *
 619:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM.c **** *
 622:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM.c **** *  None
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM.c **** *
 628:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM.c **** {
 477              		.loc 1 630 0
 478              		.cfi_startproc
 631:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 479              		.loc 1 631 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 632:.\Generated_Source\PSoC4/PWM.c **** }
 484              		.loc 1 632 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 08012040 		.word	1075839240
 491              		.cfi_endproc
 492              	.LFE16:
 493              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 494              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_SetCounterMode, %function
 500              	PWM_SetCounterMode:
 501              	.LFB17:
 633:.\Generated_Source\PSoC4/PWM.c **** 
 634:.\Generated_Source\PSoC4/PWM.c **** 
 635:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM.c **** *
 639:.\Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 21


 640:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM.c **** *
 643:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM.c **** *
 654:.\Generated_Source\PSoC4/PWM.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM.c **** *  None
 656:.\Generated_Source\PSoC4/PWM.c **** *
 657:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM.c **** {
 502              		.loc 1 659 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 660:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM.c **** 
 662:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 662 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 663:.\Generated_Source\PSoC4/PWM.c **** 
 664:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 513              		.loc 1 664 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 519              		.loc 1 665 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 666:.\Generated_Source\PSoC4/PWM.c **** 
 667:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 667 0
 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 668:.\Generated_Source\PSoC4/PWM.c **** }
 527              		.loc 1 668 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 22


 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 00012040 		.word	1075839232
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE17:
 537              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 538              		.section	.text.PWM_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	PWM_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	PWM_WritePeriod, %function
 544              	PWM_WritePeriod:
 545              	.LFB18:
 669:.\Generated_Source\PSoC4/PWM.c **** 
 670:.\Generated_Source\PSoC4/PWM.c **** 
 671:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 673:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM.c **** *
 675:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM.c **** *
 680:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM.c **** *
 683:.\Generated_Source\PSoC4/PWM.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM.c **** *  None
 685:.\Generated_Source\PSoC4/PWM.c **** *
 686:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM.c **** {
 546              		.loc 1 688 0
 547              		.cfi_startproc
 548              	.LVL42:
 689:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 549              		.loc 1 689 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/PWM.c **** }
 555              		.loc 1 690 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
 559 000a C046     		.align	2
 560              	.L41:
 561 000c 14012040 		.word	1075839252
 562              		.cfi_endproc
 563              	.LFE18:
 564              		.size	PWM_WritePeriod, .-PWM_WritePeriod
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 23


 565              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	PWM_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	PWM_ReadPeriod, %function
 571              	PWM_ReadPeriod:
 572              	.LFB19:
 691:.\Generated_Source\PSoC4/PWM.c **** 
 692:.\Generated_Source\PSoC4/PWM.c **** 
 693:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM.c **** *
 697:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM.c **** *
 700:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM.c **** *  None
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM.c **** {
 573              		.loc 1 708 0
 574              		.cfi_startproc
 709:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 575              		.loc 1 709 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 710:.\Generated_Source\PSoC4/PWM.c **** }
 580              		.loc 1 710 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 14012040 		.word	1075839252
 587              		.cfi_endproc
 588              	.LFE19:
 589              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 590              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	PWM_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	PWM_SetCompareSwap, %function
 596              	PWM_SetCompareSwap:
 597              	.LFB20:
 711:.\Generated_Source\PSoC4/PWM.c **** 
 712:.\Generated_Source\PSoC4/PWM.c **** 
 713:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 24


 715:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM.c **** *
 717:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM.c **** *  None
 731:.\Generated_Source\PSoC4/PWM.c **** *
 732:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM.c **** {
 598              		.loc 1 734 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 735:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM.c **** 
 737:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 737 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 738:.\Generated_Source\PSoC4/PWM.c **** 
 739:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 609              		.loc 1 739 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1A68     		ldr	r2, [r3]
 612 000c 0121     		mov	r1, #1
 613 000e 8A43     		bic	r2, r1
 614 0010 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 615              		.loc 1 740 0
 616 0012 1A68     		ldr	r2, [r3]
 617 0014 0C40     		and	r4, r1
 618              	.LVL46:
 619 0016 1443     		orr	r4, r2
 620 0018 1C60     		str	r4, [r3]
 741:.\Generated_Source\PSoC4/PWM.c **** 
 742:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 621              		.loc 1 742 0
 622 001a FFF7FEFF 		bl	CyExitCriticalSection
 623              	.LVL47:
 743:.\Generated_Source\PSoC4/PWM.c **** }
 624              		.loc 1 743 0
 625              		@ sp needed
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 25


 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 00012040 		.word	1075839232
 631              		.cfi_endproc
 632              	.LFE20:
 633              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 634              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_WritePeriodBuf, %function
 640              	PWM_WritePeriodBuf:
 641              	.LFB21:
 744:.\Generated_Source\PSoC4/PWM.c **** 
 745:.\Generated_Source\PSoC4/PWM.c **** 
 746:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM.c **** *
 750:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM.c **** *
 753:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM.c **** *
 756:.\Generated_Source\PSoC4/PWM.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM.c **** *  None
 758:.\Generated_Source\PSoC4/PWM.c **** *
 759:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM.c **** {
 642              		.loc 1 761 0
 643              		.cfi_startproc
 644              	.LVL48:
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 645              		.loc 1 762 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/PWM.c **** }
 651              		.loc 1 763 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
 657 000c 18012040 		.word	1075839256
 658              		.cfi_endproc
 659              	.LFE21:
 660              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 661              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 26


 663              		.global	PWM_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	PWM_ReadPeriodBuf, %function
 667              	PWM_ReadPeriodBuf:
 668              	.LFB22:
 764:.\Generated_Source\PSoC4/PWM.c **** 
 765:.\Generated_Source\PSoC4/PWM.c **** 
 766:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM.c **** *
 770:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM.c **** *  None
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM.c **** {
 669              		.loc 1 781 0
 670              		.cfi_startproc
 782:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 671              		.loc 1 782 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 783:.\Generated_Source\PSoC4/PWM.c **** }
 676              		.loc 1 783 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 18012040 		.word	1075839256
 683              		.cfi_endproc
 684              	.LFE22:
 685              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 686              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	PWM_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	PWM_SetPeriodSwap, %function
 692              	PWM_SetPeriodSwap:
 693              	.LFB23:
 784:.\Generated_Source\PSoC4/PWM.c **** 
 785:.\Generated_Source\PSoC4/PWM.c **** 
 786:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 27


 790:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM.c **** *  None
 804:.\Generated_Source\PSoC4/PWM.c **** *
 805:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM.c **** {
 694              		.loc 1 807 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 808:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM.c **** 
 810:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 810 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 811:.\Generated_Source\PSoC4/PWM.c **** 
 812:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 705              		.loc 1 812 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 711              		.loc 1 813 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0139     		sub	r1, r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 814:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM.c **** 
 816:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 816 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 817:.\Generated_Source\PSoC4/PWM.c **** }
 722              		.loc 1 817 0
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 28


 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 00012040 		.word	1075839232
 729              		.cfi_endproc
 730              	.LFE23:
 731              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 732              		.section	.text.PWM_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	PWM_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	PWM_WriteCompare, %function
 738              	PWM_WriteCompare:
 739              	.LFB24:
 818:.\Generated_Source\PSoC4/PWM.c **** 
 819:.\Generated_Source\PSoC4/PWM.c **** 
 820:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 822:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM.c **** *
 824:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM.c **** *
 828:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM.c **** *
 831:.\Generated_Source\PSoC4/PWM.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM.c **** *  None
 833:.\Generated_Source\PSoC4/PWM.c **** *
 834:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM.c **** {
 740              		.loc 1 836 0
 741              		.cfi_startproc
 742              	.LVL54:
 837:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM.c **** 
 841:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM.c **** 
 844:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM.c ****         {
 846:.\Generated_Source\PSoC4/PWM.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM.c ****         }
 848:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM.c ****         {
 850:.\Generated_Source\PSoC4/PWM.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM.c ****         }
 852:.\Generated_Source\PSoC4/PWM.c ****         else
 853:.\Generated_Source\PSoC4/PWM.c ****         {
 854:.\Generated_Source\PSoC4/PWM.c ****         }
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 29


 855:.\Generated_Source\PSoC4/PWM.c ****         
 856:.\Generated_Source\PSoC4/PWM.c ****     
 857:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM.c ****     
 859:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 743              		.loc 1 859 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/PWM.c **** }
 749              		.loc 1 860 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 0C012040 		.word	1075839244
 756              		.cfi_endproc
 757              	.LFE24:
 758              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 759              		.section	.text.PWM_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	PWM_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	PWM_ReadCompare, %function
 765              	PWM_ReadCompare:
 766              	.LFB25:
 861:.\Generated_Source\PSoC4/PWM.c **** 
 862:.\Generated_Source\PSoC4/PWM.c **** 
 863:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 865:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM.c **** *
 867:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM.c **** *
 871:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM.c **** *  None
 873:.\Generated_Source\PSoC4/PWM.c **** *
 874:.\Generated_Source\PSoC4/PWM.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM.c **** *
 877:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM.c **** {
 767              		.loc 1 879 0
 768              		.cfi_startproc
 880:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM.c **** 
 885:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 30


 886:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM.c ****         
 888:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM.c ****         
 890:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM.c ****         {
 892:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM.c ****         }
 894:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM.c ****         {
 896:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM.c ****         }
 898:.\Generated_Source\PSoC4/PWM.c ****         else
 899:.\Generated_Source\PSoC4/PWM.c ****         {
 900:.\Generated_Source\PSoC4/PWM.c ****         }
 901:.\Generated_Source\PSoC4/PWM.c **** 
 902:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM.c ****     #else
 904:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 769              		.loc 1 904 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM.c **** }
 774              		.loc 1 906 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 0C012040 		.word	1075839244
 781              		.cfi_endproc
 782              	.LFE25:
 783              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 784              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	PWM_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	PWM_WriteCompareBuf, %function
 790              	PWM_WriteCompareBuf:
 791              	.LFB26:
 907:.\Generated_Source\PSoC4/PWM.c **** 
 908:.\Generated_Source\PSoC4/PWM.c **** 
 909:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM.c **** *
 913:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM.c **** *
 917:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 31


 920:.\Generated_Source\PSoC4/PWM.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM.c **** *  None
 922:.\Generated_Source\PSoC4/PWM.c **** *
 923:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM.c **** {
 792              		.loc 1 925 0
 793              		.cfi_startproc
 794              	.LVL56:
 926:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM.c **** 
 930:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM.c **** 
 933:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM.c ****         {
 935:.\Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM.c ****         }
 937:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM.c ****         {
 939:.\Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM.c ****         }
 941:.\Generated_Source\PSoC4/PWM.c ****         else
 942:.\Generated_Source\PSoC4/PWM.c ****         {
 943:.\Generated_Source\PSoC4/PWM.c ****         }
 944:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM.c ****     
 946:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 795              		.loc 1 946 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/PWM.c **** }
 801              		.loc 1 947 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 10012040 		.word	1075839248
 808              		.cfi_endproc
 809              	.LFE26:
 810              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 811              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	PWM_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	PWM_ReadCompareBuf, %function
 817              	PWM_ReadCompareBuf:
 818              	.LFB27:
 948:.\Generated_Source\PSoC4/PWM.c **** 
 949:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 32


 950:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM.c **** *
 954:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM.c **** *
 958:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM.c **** *  None
 960:.\Generated_Source\PSoC4/PWM.c **** *
 961:.\Generated_Source\PSoC4/PWM.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM.c **** *
 964:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM.c **** {
 819              		.loc 1 966 0
 820              		.cfi_startproc
 967:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM.c **** 
 972:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM.c **** 
 975:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM.c ****         
 977:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM.c ****         {
 979:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM.c ****         }
 981:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM.c ****         {
 983:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM.c ****         }
 985:.\Generated_Source\PSoC4/PWM.c ****         else
 986:.\Generated_Source\PSoC4/PWM.c ****         {
 987:.\Generated_Source\PSoC4/PWM.c ****         }
 988:.\Generated_Source\PSoC4/PWM.c **** 
 989:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM.c ****     #else
 991:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 821              		.loc 1 991 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
 992:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM.c **** }
 826              		.loc 1 993 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 33


 832 000c 10012040 		.word	1075839248
 833              		.cfi_endproc
 834              	.LFE27:
 835              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 836              		.section	.text.PWM_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	PWM_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	PWM_ReadCapture, %function
 842              	PWM_ReadCapture:
 843              	.LFB28:
 994:.\Generated_Source\PSoC4/PWM.c **** 
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
 998:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM.c **** *
1000:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM.c **** *
1004:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM.c **** *  None
1006:.\Generated_Source\PSoC4/PWM.c **** *
1007:.\Generated_Source\PSoC4/PWM.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM.c **** *
1010:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM.c **** {
 844              		.loc 1 1012 0
 845              		.cfi_startproc
1013:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 846              		.loc 1 1013 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1014:.\Generated_Source\PSoC4/PWM.c **** }
 851              		.loc 1 1014 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 0C012040 		.word	1075839244
 858              		.cfi_endproc
 859              	.LFE28:
 860              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 861              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	PWM_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	PWM_ReadCaptureBuf, %function
 867              	PWM_ReadCaptureBuf:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 34


 868              	.LFB29:
1015:.\Generated_Source\PSoC4/PWM.c **** 
1016:.\Generated_Source\PSoC4/PWM.c **** 
1017:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM.c **** *
1021:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM.c **** *
1025:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM.c **** *  None
1027:.\Generated_Source\PSoC4/PWM.c **** *
1028:.\Generated_Source\PSoC4/PWM.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM.c **** *
1031:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM.c **** {
 869              		.loc 1 1033 0
 870              		.cfi_startproc
1034:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 871              		.loc 1 1034 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1035:.\Generated_Source\PSoC4/PWM.c **** }
 876              		.loc 1 1035 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 10012040 		.word	1075839248
 883              		.cfi_endproc
 884              	.LFE29:
 885              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 886              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	PWM_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	PWM_SetCaptureMode, %function
 892              	PWM_SetCaptureMode:
 893              	.LFB30:
1036:.\Generated_Source\PSoC4/PWM.c **** 
1037:.\Generated_Source\PSoC4/PWM.c **** 
1038:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM.c **** *
1042:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 35


1046:.\Generated_Source\PSoC4/PWM.c **** *
1047:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM.c **** *
1055:.\Generated_Source\PSoC4/PWM.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM.c **** *  None
1057:.\Generated_Source\PSoC4/PWM.c **** *
1058:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM.c **** {
 894              		.loc 1 1060 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
 901 0002 041C     		mov	r4, r0
1061:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM.c **** 
1063:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1063 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1064:.\Generated_Source\PSoC4/PWM.c **** 
1065:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 905              		.loc 1 1065 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1066 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1067:.\Generated_Source\PSoC4/PWM.c **** 
1068:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1068 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1069:.\Generated_Source\PSoC4/PWM.c **** }
 919              		.loc 1 1069 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 24012040 		.word	1075839268
 926              		.cfi_endproc
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 36


 927              	.LFE30:
 928              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 929              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	PWM_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	PWM_SetReloadMode, %function
 935              	PWM_SetReloadMode:
 936              	.LFB31:
1070:.\Generated_Source\PSoC4/PWM.c **** 
1071:.\Generated_Source\PSoC4/PWM.c **** 
1072:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM.c **** *
1076:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM.c **** *
1080:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM.c **** *
1088:.\Generated_Source\PSoC4/PWM.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM.c **** *  None
1090:.\Generated_Source\PSoC4/PWM.c **** *
1091:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM.c **** {
 937              		.loc 1 1093 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1094:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM.c **** 
1096:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1096 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1097:.\Generated_Source\PSoC4/PWM.c **** 
1098:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 948              		.loc 1 1098 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 37


 954              		.loc 1 1099 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1100:.\Generated_Source\PSoC4/PWM.c **** 
1101:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1101 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1102:.\Generated_Source\PSoC4/PWM.c **** }
 963              		.loc 1 1102 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 24012040 		.word	1075839268
 970              		.cfi_endproc
 971              	.LFE31:
 972              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 973              		.section	.text.PWM_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	PWM_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	PWM_SetStartMode, %function
 979              	PWM_SetStartMode:
 980              	.LFB32:
1103:.\Generated_Source\PSoC4/PWM.c **** 
1104:.\Generated_Source\PSoC4/PWM.c **** 
1105:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1107:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM.c **** *
1109:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM.c **** *
1113:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM.c **** *
1121:.\Generated_Source\PSoC4/PWM.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM.c **** *  None
1123:.\Generated_Source\PSoC4/PWM.c **** *
1124:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM.c **** {
 981              		.loc 1 1126 0
 982              		.cfi_startproc
 983              	.LVL66:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 38


 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1127:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM.c **** 
1129:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1129 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1130:.\Generated_Source\PSoC4/PWM.c **** 
1131:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 992              		.loc 1 1131 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 998              		.loc 1 1132 0
 999 0012 1A68     		ldr	r2, [r3]
 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1133:.\Generated_Source\PSoC4/PWM.c **** 
1134:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1134 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1135:.\Generated_Source\PSoC4/PWM.c **** }
 1007              		.loc 1 1135 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 24012040 		.word	1075839268
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE32:
 1017              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1018              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	PWM_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	PWM_SetStopMode, %function
 1024              	PWM_SetStopMode:
 1025              	.LFB33:
1136:.\Generated_Source\PSoC4/PWM.c **** 
1137:.\Generated_Source\PSoC4/PWM.c **** 
1138:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1140:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 39


1142:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM.c **** *
1145:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM.c **** *
1153:.\Generated_Source\PSoC4/PWM.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM.c **** *  None
1155:.\Generated_Source\PSoC4/PWM.c **** *
1156:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM.c **** {
 1026              		.loc 1 1158 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1159:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM.c **** 
1161:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1161 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1162:.\Generated_Source\PSoC4/PWM.c **** 
1163:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1037              		.loc 1 1163 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1043              		.loc 1 1164 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1165:.\Generated_Source\PSoC4/PWM.c **** 
1166:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1166 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1167:.\Generated_Source\PSoC4/PWM.c **** }
 1052              		.loc 1 1167 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 40


 1057              	.L86:
 1058 0020 24012040 		.word	1075839268
 1059              		.cfi_endproc
 1060              	.LFE33:
 1061              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1062              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	PWM_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	PWM_SetCountMode, %function
 1068              	PWM_SetCountMode:
 1069              	.LFB34:
1168:.\Generated_Source\PSoC4/PWM.c **** 
1169:.\Generated_Source\PSoC4/PWM.c **** 
1170:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1172:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM.c **** *
1174:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM.c **** *
1178:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM.c **** *
1186:.\Generated_Source\PSoC4/PWM.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM.c **** *  None
1188:.\Generated_Source\PSoC4/PWM.c **** *
1189:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM.c **** {
 1070              		.loc 1 1191 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1192:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM.c **** 
1194:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1194 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1195:.\Generated_Source\PSoC4/PWM.c **** 
1196:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1081              		.loc 1 1196 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 41


 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1087              		.loc 1 1197 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1198:.\Generated_Source\PSoC4/PWM.c **** 
1199:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1199 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1200:.\Generated_Source\PSoC4/PWM.c **** }
 1096              		.loc 1 1200 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 24012040 		.word	1075839268
 1103              		.cfi_endproc
 1104              	.LFE34:
 1105              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1106              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	PWM_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	PWM_TriggerCommand, %function
 1112              	PWM_TriggerCommand:
 1113              	.LFB35:
1201:.\Generated_Source\PSoC4/PWM.c **** 
1202:.\Generated_Source\PSoC4/PWM.c **** 
1203:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM.c **** *
1207:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM.c **** *
1212:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 42


1225:.\Generated_Source\PSoC4/PWM.c **** *
1226:.\Generated_Source\PSoC4/PWM.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM.c **** *  None
1228:.\Generated_Source\PSoC4/PWM.c **** *
1229:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM.c **** {
 1114              		.loc 1 1231 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 041C     		mov	r4, r0
 1124 0004 0D1C     		mov	r5, r1
1232:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM.c **** 
1234:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1234 0
 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1235:.\Generated_Source\PSoC4/PWM.c **** 
1236:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1236 0
 1129 000a AC40     		lsl	r4, r4, r5
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1C60     		str	r4, [r3]
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1238 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1239:.\Generated_Source\PSoC4/PWM.c **** }
 1136              		.loc 1 1239 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08002040 		.word	1075838984
 1144              		.cfi_endproc
 1145              	.LFE35:
 1146              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1147              		.section	.text.PWM_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	PWM_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	PWM_Enable, %function
 1153              	PWM_Enable:
 1154              	.LFB3:
 178:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 43


 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1164              		.loc 1 182 0
 1165 0006 064A     		ldr	r2, .L95
 1166 0008 1168     		ldr	r1, [r2]
 1167 000a 0123     		mov	r3, #1
 1168 000c 0B43     		orr	r3, r1
 1169 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/PWM.c **** 
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 188:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 1173              		.loc 1 188 0
 1174 0014 0120     		mov	r0, #1
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	PWM_TriggerCommand
 1177              	.LVL85:
 197:.\Generated_Source\PSoC4/PWM.c **** 
 1178              		.loc 1 197 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00002040 		.word	1075838976
 1185              		.cfi_endproc
 1186              	.LFE3:
 1187              		.size	PWM_Enable, .-PWM_Enable
 1188              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	PWM_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	PWM_ReadStatus, %function
 1194              	PWM_ReadStatus:
 1195              	.LFB36:
1240:.\Generated_Source\PSoC4/PWM.c **** 
1241:.\Generated_Source\PSoC4/PWM.c **** 
1242:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1244:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM.c **** *
1246:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1248:.\Generated_Source\PSoC4/PWM.c **** *
1249:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 44


1251:.\Generated_Source\PSoC4/PWM.c **** *
1252:.\Generated_Source\PSoC4/PWM.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM.c **** *
1258:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM.c **** {
 1196              		.loc 1 1260 0
 1197              		.cfi_startproc
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1261 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1868     		ldr	r0, [r3]
 1201 0004 820F     		lsr	r2, r0, #30
1262:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1202              		.loc 1 1262 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1261 0
 1207 000c 1043     		orr	r0, r2
1263:.\Generated_Source\PSoC4/PWM.c **** }
 1208              		.loc 1 1263 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 04012040 		.word	1075839236
 1215              		.cfi_endproc
 1216              	.LFE36:
 1217              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1218              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	PWM_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	PWM_SetInterruptMode, %function
 1224              	PWM_SetInterruptMode:
 1225              	.LFB37:
1264:.\Generated_Source\PSoC4/PWM.c **** 
1265:.\Generated_Source\PSoC4/PWM.c **** 
1266:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM.c **** *
1270:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM.c **** *
1274:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 45


1277:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM.c **** *
1280:.\Generated_Source\PSoC4/PWM.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM.c **** *  None
1282:.\Generated_Source\PSoC4/PWM.c **** *
1283:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM.c **** {
 1226              		.loc 1 1285 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1286:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1286 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1287:.\Generated_Source\PSoC4/PWM.c **** }
 1232              		.loc 1 1287 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
 1237              	.L101:
 1238 0008 38012040 		.word	1075839288
 1239              		.cfi_endproc
 1240              	.LFE37:
 1241              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1242              		.section	.text.PWM_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	PWM_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	PWM_Init, %function
 1248              	PWM_Init:
 1249              	.LFB2:
  39:.\Generated_Source\PSoC4/PWM.c **** 
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 10B5     		push	{r4, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
  89:.\Generated_Source\PSoC4/PWM.c **** 
 1256              		.loc 1 89 0
 1257 0002 0E4C     		ldr	r4, .L104
 1258 0004 8023     		mov	r3, #128
 1259 0006 DB04     		lsl	r3, r3, #19
 1260 0008 2360     		str	r3, [r4]
  95:.\Generated_Source\PSoC4/PWM.c ****             
 1261              		.loc 1 95 0
 1262 000a 2368     		ldr	r3, [r4]
 1263 000c 2360     		str	r3, [r4]
 103:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 1264              		.loc 1 103 0
 1265 000e 0020     		mov	r0, #0
 1266 0010 FFF7FEFF 		bl	PWM_WriteCounter
 1267              	.LVL87:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 46


 112:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 1268              		.loc 1 112 0
 1269 0014 2368     		ldr	r3, [r4]
 1270 0016 2360     		str	r3, [r4]
 116:.\Generated_Source\PSoC4/PWM.c ****     
 1271              		.loc 1 116 0
 1272 0018 0C22     		mov	r2, #12
 1273 001a 094B     		ldr	r3, .L104+4
 1274 001c 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/PWM.c **** 
 1275              		.loc 1 119 0
 1276 001e 0120     		mov	r0, #1
 1277 0020 FFF7FEFF 		bl	PWM_SetInterruptMode
 1278              	.LVL88:
 129:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 1279              		.loc 1 129 0
 1280 0024 3122     		mov	r2, #49
 1281 0026 074B     		ldr	r3, .L104+8
 1282 0028 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 1283              		.loc 1 146 0
 1284 002a FA20     		mov	r0, #250
 1285 002c 4000     		lsl	r0, r0, #1
 1286 002e FFF7FEFF 		bl	PWM_WritePeriod
 1287              	.LVL89:
 147:.\Generated_Source\PSoC4/PWM.c **** 
 1288              		.loc 1 147 0
 1289 0032 FA20     		mov	r0, #250
 1290 0034 FFF7FEFF 		bl	PWM_WriteCompare
 1291              	.LVL90:
 160:.\Generated_Source\PSoC4/PWM.c **** 
 1292              		.loc 1 160 0
 1293              		@ sp needed
 1294 0038 10BD     		pop	{r4, pc}
 1295              	.L105:
 1296 003a C046     		.align	2
 1297              	.L104:
 1298 003c 00012040 		.word	1075839232
 1299 0040 24012040 		.word	1075839268
 1300 0044 28012040 		.word	1075839272
 1301              		.cfi_endproc
 1302              	.LFE2:
 1303              		.size	PWM_Init, .-PWM_Init
 1304              		.section	.text.PWM_Start,"ax",%progbits
 1305              		.align	2
 1306              		.global	PWM_Start
 1307              		.code	16
 1308              		.thumb_func
 1309              		.type	PWM_Start, %function
 1310              	PWM_Start:
 1311              	.LFB4:
 225:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 1312              		.loc 1 225 0
 1313              		.cfi_startproc
 1314 0000 08B5     		push	{r3, lr}
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 3, -8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 47


 1317              		.cfi_offset 14, -4
 226:.\Generated_Source\PSoC4/PWM.c ****     {
 1318              		.loc 1 226 0
 1319 0002 064B     		ldr	r3, .L108
 1320 0004 1B78     		ldrb	r3, [r3]
 1321 0006 002B     		cmp	r3, #0
 1322 0008 04D1     		bne	.L107
 228:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 1323              		.loc 1 228 0
 1324 000a FFF7FEFF 		bl	PWM_Init
 1325              	.LVL91:
 229:.\Generated_Source\PSoC4/PWM.c ****     }
 1326              		.loc 1 229 0
 1327 000e 0122     		mov	r2, #1
 1328 0010 024B     		ldr	r3, .L108
 1329 0012 1A70     		strb	r2, [r3]
 1330              	.L107:
 232:.\Generated_Source\PSoC4/PWM.c **** }
 1331              		.loc 1 232 0
 1332 0014 FFF7FEFF 		bl	PWM_Enable
 1333              	.LVL92:
 233:.\Generated_Source\PSoC4/PWM.c **** 
 1334              		.loc 1 233 0
 1335              		@ sp needed
 1336 0018 08BD     		pop	{r3, pc}
 1337              	.L109:
 1338 001a C046     		.align	2
 1339              	.L108:
 1340 001c 00000000 		.word	.LANCHOR0
 1341              		.cfi_endproc
 1342              	.LFE4:
 1343              		.size	PWM_Start, .-PWM_Start
 1344              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1345              		.align	2
 1346              		.global	PWM_GetInterruptSourceMasked
 1347              		.code	16
 1348              		.thumb_func
 1349              		.type	PWM_GetInterruptSourceMasked, %function
 1350              	PWM_GetInterruptSourceMasked:
 1351              	.LFB38:
1288:.\Generated_Source\PSoC4/PWM.c **** 
1289:.\Generated_Source\PSoC4/PWM.c **** 
1290:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM.c **** *
1294:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM.c **** *
1297:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM.c **** *   None
1299:.\Generated_Source\PSoC4/PWM.c **** *
1300:.\Generated_Source\PSoC4/PWM.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 48


1305:.\Generated_Source\PSoC4/PWM.c **** *
1306:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM.c **** {
 1352              		.loc 1 1308 0
 1353              		.cfi_startproc
1309:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1354              		.loc 1 1309 0
 1355 0000 014B     		ldr	r3, .L111
 1356 0002 1868     		ldr	r0, [r3]
1310:.\Generated_Source\PSoC4/PWM.c **** }
 1357              		.loc 1 1310 0
 1358              		@ sp needed
 1359 0004 7047     		bx	lr
 1360              	.L112:
 1361 0006 C046     		.align	2
 1362              	.L111:
 1363 0008 3C012040 		.word	1075839292
 1364              		.cfi_endproc
 1365              	.LFE38:
 1366              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1367              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1368              		.align	2
 1369              		.global	PWM_GetInterruptSource
 1370              		.code	16
 1371              		.thumb_func
 1372              		.type	PWM_GetInterruptSource, %function
 1373              	PWM_GetInterruptSource:
 1374              	.LFB39:
1311:.\Generated_Source\PSoC4/PWM.c **** 
1312:.\Generated_Source\PSoC4/PWM.c **** 
1313:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM.c **** *
1317:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM.c **** *
1320:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM.c **** *  None
1322:.\Generated_Source\PSoC4/PWM.c **** *
1323:.\Generated_Source\PSoC4/PWM.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM.c **** *
1329:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM.c **** {
 1375              		.loc 1 1331 0
 1376              		.cfi_startproc
1332:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1377              		.loc 1 1332 0
 1378 0000 014B     		ldr	r3, .L114
 1379 0002 1868     		ldr	r0, [r3]
1333:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 49


 1380              		.loc 1 1333 0
 1381              		@ sp needed
 1382 0004 7047     		bx	lr
 1383              	.L115:
 1384 0006 C046     		.align	2
 1385              	.L114:
 1386 0008 30012040 		.word	1075839280
 1387              		.cfi_endproc
 1388              	.LFE39:
 1389              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1390              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1391              		.align	2
 1392              		.global	PWM_ClearInterrupt
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	PWM_ClearInterrupt, %function
 1396              	PWM_ClearInterrupt:
 1397              	.LFB40:
1334:.\Generated_Source\PSoC4/PWM.c **** 
1335:.\Generated_Source\PSoC4/PWM.c **** 
1336:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM.c **** *
1340:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM.c **** *
1343:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM.c **** *
1349:.\Generated_Source\PSoC4/PWM.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM.c **** *  None
1351:.\Generated_Source\PSoC4/PWM.c **** *
1352:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM.c **** {
 1398              		.loc 1 1354 0
 1399              		.cfi_startproc
 1400              	.LVL93:
1355:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1401              		.loc 1 1355 0
 1402 0000 014B     		ldr	r3, .L117
 1403 0002 1860     		str	r0, [r3]
1356:.\Generated_Source\PSoC4/PWM.c **** }
 1404              		.loc 1 1356 0
 1405              		@ sp needed
 1406 0004 7047     		bx	lr
 1407              	.L118:
 1408 0006 C046     		.align	2
 1409              	.L117:
 1410 0008 30012040 		.word	1075839280
 1411              		.cfi_endproc
 1412              	.LFE40:
 1413              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 50


 1414              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1415              		.align	2
 1416              		.global	PWM_SetInterrupt
 1417              		.code	16
 1418              		.thumb_func
 1419              		.type	PWM_SetInterrupt, %function
 1420              	PWM_SetInterrupt:
 1421              	.LFB41:
1357:.\Generated_Source\PSoC4/PWM.c **** 
1358:.\Generated_Source\PSoC4/PWM.c **** 
1359:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM.c **** *
1363:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM.c **** *
1366:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM.c **** *
1372:.\Generated_Source\PSoC4/PWM.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM.c **** *  None
1374:.\Generated_Source\PSoC4/PWM.c **** *
1375:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM.c **** {
 1422              		.loc 1 1377 0
 1423              		.cfi_startproc
 1424              	.LVL94:
1378:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1425              		.loc 1 1378 0
 1426 0000 014B     		ldr	r3, .L120
 1427 0002 1860     		str	r0, [r3]
1379:.\Generated_Source\PSoC4/PWM.c **** }
 1428              		.loc 1 1379 0
 1429              		@ sp needed
 1430 0004 7047     		bx	lr
 1431              	.L121:
 1432 0006 C046     		.align	2
 1433              	.L120:
 1434 0008 34012040 		.word	1075839284
 1435              		.cfi_endproc
 1436              	.LFE41:
 1437              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1438              		.global	PWM_initVar
 1439              		.bss
 1440              		.set	.LANCHOR0,. + 0
 1441              		.type	PWM_initVar, %object
 1442              		.size	PWM_initVar, 1
 1443              	PWM_initVar:
 1444 0000 00       		.space	1
 1445              		.text
 1446              	.Letext0:
 1447              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 51


 1448              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1449              		.section	.debug_info,"",%progbits
 1450              	.Ldebug_info0:
 1451 0000 FF080000 		.4byte	0x8ff
 1452 0004 0400     		.2byte	0x4
 1453 0006 00000000 		.4byte	.Ldebug_abbrev0
 1454 000a 04       		.byte	0x4
 1455 000b 01       		.uleb128 0x1
 1456 000c D1020000 		.4byte	.LASF76
 1457 0010 01       		.byte	0x1
 1458 0011 E9000000 		.4byte	.LASF77
 1459 0015 6F030000 		.4byte	.LASF78
 1460 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1461 001d 00000000 		.4byte	0
 1462 0021 00000000 		.4byte	.Ldebug_line0
 1463 0025 02       		.uleb128 0x2
 1464 0026 01       		.byte	0x1
 1465 0027 06       		.byte	0x6
 1466 0028 A1000000 		.4byte	.LASF0
 1467 002c 02       		.uleb128 0x2
 1468 002d 01       		.byte	0x1
 1469 002e 08       		.byte	0x8
 1470 002f C4030000 		.4byte	.LASF1
 1471 0033 02       		.uleb128 0x2
 1472 0034 02       		.byte	0x2
 1473 0035 05       		.byte	0x5
 1474 0036 FB030000 		.4byte	.LASF2
 1475 003a 02       		.uleb128 0x2
 1476 003b 02       		.byte	0x2
 1477 003c 07       		.byte	0x7
 1478 003d 09020000 		.4byte	.LASF3
 1479 0041 02       		.uleb128 0x2
 1480 0042 04       		.byte	0x4
 1481 0043 05       		.byte	0x5
 1482 0044 08010000 		.4byte	.LASF4
 1483 0048 02       		.uleb128 0x2
 1484 0049 04       		.byte	0x4
 1485 004a 07       		.byte	0x7
 1486 004b D7010000 		.4byte	.LASF5
 1487 004f 02       		.uleb128 0x2
 1488 0050 08       		.byte	0x8
 1489 0051 05       		.byte	0x5
 1490 0052 93000000 		.4byte	.LASF6
 1491 0056 02       		.uleb128 0x2
 1492 0057 08       		.byte	0x8
 1493 0058 07       		.byte	0x7
 1494 0059 41000000 		.4byte	.LASF7
 1495 005d 03       		.uleb128 0x3
 1496 005e 04       		.byte	0x4
 1497 005f 05       		.byte	0x5
 1498 0060 696E7400 		.ascii	"int\000"
 1499 0064 02       		.uleb128 0x2
 1500 0065 04       		.byte	0x4
 1501 0066 07       		.byte	0x7
 1502 0067 AF010000 		.4byte	.LASF8
 1503 006b 04       		.uleb128 0x4
 1504 006c 11010000 		.4byte	.LASF9
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 52


 1505 0070 02       		.byte	0x2
 1506 0071 9801     		.2byte	0x198
 1507 0073 2C000000 		.4byte	0x2c
 1508 0077 04       		.uleb128 0x4
 1509 0078 5E010000 		.4byte	.LASF10
 1510 007c 02       		.byte	0x2
 1511 007d 9A01     		.2byte	0x19a
 1512 007f 48000000 		.4byte	0x48
 1513 0083 02       		.uleb128 0x2
 1514 0084 04       		.byte	0x4
 1515 0085 04       		.byte	0x4
 1516 0086 5F030000 		.4byte	.LASF11
 1517 008a 02       		.uleb128 0x2
 1518 008b 08       		.byte	0x8
 1519 008c 04       		.byte	0x4
 1520 008d 17010000 		.4byte	.LASF12
 1521 0091 02       		.uleb128 0x2
 1522 0092 01       		.byte	0x1
 1523 0093 08       		.byte	0x8
 1524 0094 5B040000 		.4byte	.LASF13
 1525 0098 04       		.uleb128 0x4
 1526 0099 6F020000 		.4byte	.LASF14
 1527 009d 02       		.byte	0x2
 1528 009e 4402     		.2byte	0x244
 1529 00a0 A4000000 		.4byte	0xa4
 1530 00a4 05       		.uleb128 0x5
 1531 00a5 77000000 		.4byte	0x77
 1532 00a9 02       		.uleb128 0x2
 1533 00aa 04       		.byte	0x4
 1534 00ab 07       		.byte	0x7
 1535 00ac 90020000 		.4byte	.LASF15
 1536 00b0 06       		.uleb128 0x6
 1537 00b1 44010000 		.4byte	.LASF16
 1538 00b5 01       		.byte	0x1
 1539 00b6 FA       		.byte	0xfa
 1540 00b7 00000000 		.4byte	.LFB5
 1541 00bb 1C000000 		.4byte	.LFE5-.LFB5
 1542 00bf 01       		.uleb128 0x1
 1543 00c0 9C       		.byte	0x9c
 1544 00c1 E7000000 		.4byte	0xe7
 1545 00c5 07       		.uleb128 0x7
 1546 00c6 BC040000 		.4byte	.LASF18
 1547 00ca 01       		.byte	0x1
 1548 00cb FC       		.byte	0xfc
 1549 00cc 6B000000 		.4byte	0x6b
 1550 00d0 00000000 		.4byte	.LLST0
 1551 00d4 08       		.uleb128 0x8
 1552 00d5 06000000 		.4byte	.LVL0
 1553 00d9 EA080000 		.4byte	0x8ea
 1554 00dd 08       		.uleb128 0x8
 1555 00de 14000000 		.4byte	.LVL1
 1556 00e2 F5080000 		.4byte	0x8f5
 1557 00e6 00       		.byte	0
 1558 00e7 09       		.uleb128 0x9
 1559 00e8 DE040000 		.4byte	.LASF17
 1560 00ec 01       		.byte	0x1
 1561 00ed 1F01     		.2byte	0x11f
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 53


 1562 00ef 00000000 		.4byte	.LFB6
 1563 00f3 28000000 		.4byte	.LFE6-.LFB6
 1564 00f7 01       		.uleb128 0x1
 1565 00f8 9C       		.byte	0x9c
 1566 00f9 30010000 		.4byte	0x130
 1567 00fd 0A       		.uleb128 0xa
 1568 00fe 60040000 		.4byte	.LASF20
 1569 0102 01       		.byte	0x1
 1570 0103 1F01     		.2byte	0x11f
 1571 0105 77000000 		.4byte	0x77
 1572 0109 13000000 		.4byte	.LLST1
 1573 010d 0B       		.uleb128 0xb
 1574 010e BC040000 		.4byte	.LASF18
 1575 0112 01       		.byte	0x1
 1576 0113 2101     		.2byte	0x121
 1577 0115 6B000000 		.4byte	0x6b
 1578 0119 3F000000 		.4byte	.LLST2
 1579 011d 08       		.uleb128 0x8
 1580 011e 08000000 		.4byte	.LVL3
 1581 0122 EA080000 		.4byte	0x8ea
 1582 0126 08       		.uleb128 0x8
 1583 0127 1C000000 		.4byte	.LVL5
 1584 012b F5080000 		.4byte	0x8f5
 1585 012f 00       		.byte	0
 1586 0130 09       		.uleb128 0x9
 1587 0131 4D040000 		.4byte	.LASF19
 1588 0135 01       		.byte	0x1
 1589 0136 4001     		.2byte	0x140
 1590 0138 00000000 		.4byte	.LFB7
 1591 013c 28000000 		.4byte	.LFE7-.LFB7
 1592 0140 01       		.uleb128 0x1
 1593 0141 9C       		.byte	0x9c
 1594 0142 79010000 		.4byte	0x179
 1595 0146 0A       		.uleb128 0xa
 1596 0147 6B000000 		.4byte	.LASF21
 1597 014b 01       		.byte	0x1
 1598 014c 4001     		.2byte	0x140
 1599 014e 77000000 		.4byte	0x77
 1600 0152 52000000 		.4byte	.LLST3
 1601 0156 0B       		.uleb128 0xb
 1602 0157 BC040000 		.4byte	.LASF18
 1603 015b 01       		.byte	0x1
 1604 015c 4201     		.2byte	0x142
 1605 015e 6B000000 		.4byte	0x6b
 1606 0162 7E000000 		.4byte	.LLST4
 1607 0166 08       		.uleb128 0x8
 1608 0167 08000000 		.4byte	.LVL7
 1609 016b EA080000 		.4byte	0x8ea
 1610 016f 08       		.uleb128 0x8
 1611 0170 1C000000 		.4byte	.LVL9
 1612 0174 F5080000 		.4byte	0x8f5
 1613 0178 00       		.byte	0
 1614 0179 09       		.uleb128 0x9
 1615 017a 1C020000 		.4byte	.LASF22
 1616 017e 01       		.byte	0x1
 1617 017f 6501     		.2byte	0x165
 1618 0181 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 54


 1619 0185 28000000 		.4byte	.LFE8-.LFB8
 1620 0189 01       		.uleb128 0x1
 1621 018a 9C       		.byte	0x9c
 1622 018b C2010000 		.4byte	0x1c2
 1623 018f 0A       		.uleb128 0xa
 1624 0190 65030000 		.4byte	.LASF23
 1625 0194 01       		.byte	0x1
 1626 0195 6501     		.2byte	0x165
 1627 0197 77000000 		.4byte	0x77
 1628 019b 91000000 		.4byte	.LLST5
 1629 019f 0B       		.uleb128 0xb
 1630 01a0 BC040000 		.4byte	.LASF18
 1631 01a4 01       		.byte	0x1
 1632 01a5 6701     		.2byte	0x167
 1633 01a7 6B000000 		.4byte	0x6b
 1634 01ab BD000000 		.4byte	.LLST6
 1635 01af 08       		.uleb128 0x8
 1636 01b0 08000000 		.4byte	.LVL11
 1637 01b4 EA080000 		.4byte	0x8ea
 1638 01b8 08       		.uleb128 0x8
 1639 01b9 1C000000 		.4byte	.LVL13
 1640 01bd F5080000 		.4byte	0x8f5
 1641 01c1 00       		.byte	0
 1642 01c2 09       		.uleb128 0x9
 1643 01c3 B0020000 		.4byte	.LASF24
 1644 01c7 01       		.byte	0x1
 1645 01c8 8501     		.2byte	0x185
 1646 01ca 00000000 		.4byte	.LFB9
 1647 01ce 2C000000 		.4byte	.LFE9-.LFB9
 1648 01d2 01       		.uleb128 0x1
 1649 01d3 9C       		.byte	0x9c
 1650 01d4 0B020000 		.4byte	0x20b
 1651 01d8 0A       		.uleb128 0xa
 1652 01d9 2D020000 		.4byte	.LASF25
 1653 01dd 01       		.byte	0x1
 1654 01de 8501     		.2byte	0x185
 1655 01e0 77000000 		.4byte	0x77
 1656 01e4 D0000000 		.4byte	.LLST7
 1657 01e8 0B       		.uleb128 0xb
 1658 01e9 BC040000 		.4byte	.LASF18
 1659 01ed 01       		.byte	0x1
 1660 01ee 8701     		.2byte	0x187
 1661 01f0 6B000000 		.4byte	0x6b
 1662 01f4 FC000000 		.4byte	.LLST8
 1663 01f8 08       		.uleb128 0x8
 1664 01f9 08000000 		.4byte	.LVL15
 1665 01fd EA080000 		.4byte	0x8ea
 1666 0201 08       		.uleb128 0x8
 1667 0202 22000000 		.4byte	.LVL17
 1668 0206 F5080000 		.4byte	0x8f5
 1669 020a 00       		.byte	0
 1670 020b 09       		.uleb128 0x9
 1671 020c EC030000 		.4byte	.LASF26
 1672 0210 01       		.byte	0x1
 1673 0211 BB01     		.2byte	0x1bb
 1674 0213 00000000 		.4byte	.LFB10
 1675 0217 10000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 55


 1676 021b 01       		.uleb128 0x1
 1677 021c 9C       		.byte	0x9c
 1678 021d 32020000 		.4byte	0x232
 1679 0221 0A       		.uleb128 0xa
 1680 0222 E9010000 		.4byte	.LASF27
 1681 0226 01       		.byte	0x1
 1682 0227 BB01     		.2byte	0x1bb
 1683 0229 77000000 		.4byte	0x77
 1684 022d 0F010000 		.4byte	.LLST9
 1685 0231 00       		.byte	0
 1686 0232 09       		.uleb128 0x9
 1687 0233 27000000 		.4byte	.LASF28
 1688 0237 01       		.byte	0x1
 1689 0238 DF01     		.2byte	0x1df
 1690 023a 00000000 		.4byte	.LFB11
 1691 023e 28000000 		.4byte	.LFE11-.LFB11
 1692 0242 01       		.uleb128 0x1
 1693 0243 9C       		.byte	0x9c
 1694 0244 7B020000 		.4byte	0x27b
 1695 0248 0A       		.uleb128 0xa
 1696 0249 99020000 		.4byte	.LASF29
 1697 024d 01       		.byte	0x1
 1698 024e DF01     		.2byte	0x1df
 1699 0250 77000000 		.4byte	0x77
 1700 0254 30010000 		.4byte	.LLST10
 1701 0258 0B       		.uleb128 0xb
 1702 0259 BC040000 		.4byte	.LASF18
 1703 025d 01       		.byte	0x1
 1704 025e E101     		.2byte	0x1e1
 1705 0260 6B000000 		.4byte	0x6b
 1706 0264 5C010000 		.4byte	.LLST11
 1707 0268 08       		.uleb128 0x8
 1708 0269 08000000 		.4byte	.LVL21
 1709 026d EA080000 		.4byte	0x8ea
 1710 0271 08       		.uleb128 0x8
 1711 0272 22000000 		.4byte	.LVL23
 1712 0276 F5080000 		.4byte	0x8f5
 1713 027a 00       		.byte	0
 1714 027b 09       		.uleb128 0x9
 1715 027c EA040000 		.4byte	.LASF30
 1716 0280 01       		.byte	0x1
 1717 0281 0102     		.2byte	0x201
 1718 0283 00000000 		.4byte	.LFB12
 1719 0287 28000000 		.4byte	.LFE12-.LFB12
 1720 028b 01       		.uleb128 0x1
 1721 028c 9C       		.byte	0x9c
 1722 028d C4020000 		.4byte	0x2c4
 1723 0291 0A       		.uleb128 0xa
 1724 0292 DB030000 		.4byte	.LASF31
 1725 0296 01       		.byte	0x1
 1726 0297 0102     		.2byte	0x201
 1727 0299 77000000 		.4byte	0x77
 1728 029d 6F010000 		.4byte	.LLST12
 1729 02a1 0B       		.uleb128 0xb
 1730 02a2 BC040000 		.4byte	.LASF18
 1731 02a6 01       		.byte	0x1
 1732 02a7 0302     		.2byte	0x203
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 56


 1733 02a9 6B000000 		.4byte	0x6b
 1734 02ad 9B010000 		.4byte	.LLST13
 1735 02b1 08       		.uleb128 0x8
 1736 02b2 08000000 		.4byte	.LVL25
 1737 02b6 EA080000 		.4byte	0x8ea
 1738 02ba 08       		.uleb128 0x8
 1739 02bb 22000000 		.4byte	.LVL27
 1740 02bf F5080000 		.4byte	0x8f5
 1741 02c3 00       		.byte	0
 1742 02c4 09       		.uleb128 0x9
 1743 02c5 BC010000 		.4byte	.LASF32
 1744 02c9 01       		.byte	0x1
 1745 02ca 2202     		.2byte	0x222
 1746 02cc 00000000 		.4byte	.LFB13
 1747 02d0 2C000000 		.4byte	.LFE13-.LFB13
 1748 02d4 01       		.uleb128 0x1
 1749 02d5 9C       		.byte	0x9c
 1750 02d6 0D030000 		.4byte	0x30d
 1751 02da 0A       		.uleb128 0xa
 1752 02db 96010000 		.4byte	.LASF33
 1753 02df 01       		.byte	0x1
 1754 02e0 2202     		.2byte	0x222
 1755 02e2 77000000 		.4byte	0x77
 1756 02e6 AE010000 		.4byte	.LLST14
 1757 02ea 0B       		.uleb128 0xb
 1758 02eb BC040000 		.4byte	.LASF18
 1759 02ef 01       		.byte	0x1
 1760 02f0 2402     		.2byte	0x224
 1761 02f2 6B000000 		.4byte	0x6b
 1762 02f6 DA010000 		.4byte	.LLST15
 1763 02fa 08       		.uleb128 0x8
 1764 02fb 08000000 		.4byte	.LVL29
 1765 02ff EA080000 		.4byte	0x8ea
 1766 0303 08       		.uleb128 0x8
 1767 0304 20000000 		.4byte	.LVL31
 1768 0308 F5080000 		.4byte	0x8f5
 1769 030c 00       		.byte	0
 1770 030d 09       		.uleb128 0x9
 1771 030e 4D010000 		.4byte	.LASF34
 1772 0312 01       		.byte	0x1
 1773 0313 4302     		.2byte	0x243
 1774 0315 00000000 		.4byte	.LFB14
 1775 0319 28000000 		.4byte	.LFE14-.LFB14
 1776 031d 01       		.uleb128 0x1
 1777 031e 9C       		.byte	0x9c
 1778 031f 56030000 		.4byte	0x356
 1779 0323 0A       		.uleb128 0xa
 1780 0324 82010000 		.4byte	.LASF35
 1781 0328 01       		.byte	0x1
 1782 0329 4302     		.2byte	0x243
 1783 032b 77000000 		.4byte	0x77
 1784 032f ED010000 		.4byte	.LLST16
 1785 0333 0B       		.uleb128 0xb
 1786 0334 BC040000 		.4byte	.LASF18
 1787 0338 01       		.byte	0x1
 1788 0339 4502     		.2byte	0x245
 1789 033b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 57


 1790 033f 19020000 		.4byte	.LLST17
 1791 0343 08       		.uleb128 0x8
 1792 0344 08000000 		.4byte	.LVL33
 1793 0348 EA080000 		.4byte	0x8ea
 1794 034c 08       		.uleb128 0x8
 1795 034d 1C000000 		.4byte	.LVL35
 1796 0351 F5080000 		.4byte	0x8f5
 1797 0355 00       		.byte	0
 1798 0356 09       		.uleb128 0x9
 1799 0357 72000000 		.4byte	.LASF36
 1800 035b 01       		.byte	0x1
 1801 035c 6102     		.2byte	0x261
 1802 035e 00000000 		.4byte	.LFB15
 1803 0362 10000000 		.4byte	.LFE15-.LFB15
 1804 0366 01       		.uleb128 0x1
 1805 0367 9C       		.byte	0x9c
 1806 0368 7D030000 		.4byte	0x37d
 1807 036c 0A       		.uleb128 0xa
 1808 036d 00000000 		.4byte	.LASF37
 1809 0371 01       		.byte	0x1
 1810 0372 6102     		.2byte	0x261
 1811 0374 77000000 		.4byte	0x77
 1812 0378 2C020000 		.4byte	.LLST18
 1813 037c 00       		.byte	0
 1814 037d 0C       		.uleb128 0xc
 1815 037e 83000000 		.4byte	.LASF42
 1816 0382 01       		.byte	0x1
 1817 0383 7502     		.2byte	0x275
 1818 0385 77000000 		.4byte	0x77
 1819 0389 00000000 		.4byte	.LFB16
 1820 038d 10000000 		.4byte	.LFE16-.LFB16
 1821 0391 01       		.uleb128 0x1
 1822 0392 9C       		.byte	0x9c
 1823 0393 09       		.uleb128 0x9
 1824 0394 21050000 		.4byte	.LASF38
 1825 0398 01       		.byte	0x1
 1826 0399 9202     		.2byte	0x292
 1827 039b 00000000 		.4byte	.LFB17
 1828 039f 28000000 		.4byte	.LFE17-.LFB17
 1829 03a3 01       		.uleb128 0x1
 1830 03a4 9C       		.byte	0x9c
 1831 03a5 DC030000 		.4byte	0x3dc
 1832 03a9 0A       		.uleb128 0xa
 1833 03aa 88040000 		.4byte	.LASF39
 1834 03ae 01       		.byte	0x1
 1835 03af 9202     		.2byte	0x292
 1836 03b1 77000000 		.4byte	0x77
 1837 03b5 4D020000 		.4byte	.LLST19
 1838 03b9 0B       		.uleb128 0xb
 1839 03ba BC040000 		.4byte	.LASF18
 1840 03be 01       		.byte	0x1
 1841 03bf 9402     		.2byte	0x294
 1842 03c1 6B000000 		.4byte	0x6b
 1843 03c5 79020000 		.4byte	.LLST20
 1844 03c9 08       		.uleb128 0x8
 1845 03ca 08000000 		.4byte	.LVL39
 1846 03ce EA080000 		.4byte	0x8ea
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 58


 1847 03d2 08       		.uleb128 0x8
 1848 03d3 1C000000 		.4byte	.LVL41
 1849 03d7 F5080000 		.4byte	0x8f5
 1850 03db 00       		.byte	0
 1851 03dc 09       		.uleb128 0x9
 1852 03dd 5F020000 		.4byte	.LASF40
 1853 03e1 01       		.byte	0x1
 1854 03e2 AF02     		.2byte	0x2af
 1855 03e4 00000000 		.4byte	.LFB18
 1856 03e8 10000000 		.4byte	.LFE18-.LFB18
 1857 03ec 01       		.uleb128 0x1
 1858 03ed 9C       		.byte	0x9c
 1859 03ee 03040000 		.4byte	0x403
 1860 03f2 0A       		.uleb128 0xa
 1861 03f3 3A000000 		.4byte	.LASF41
 1862 03f7 01       		.byte	0x1
 1863 03f8 AF02     		.2byte	0x2af
 1864 03fa 77000000 		.4byte	0x77
 1865 03fe 8C020000 		.4byte	.LLST21
 1866 0402 00       		.byte	0
 1867 0403 0C       		.uleb128 0xc
 1868 0404 81020000 		.4byte	.LASF43
 1869 0408 01       		.byte	0x1
 1870 0409 C302     		.2byte	0x2c3
 1871 040b 77000000 		.4byte	0x77
 1872 040f 00000000 		.4byte	.LFB19
 1873 0413 10000000 		.4byte	.LFE19-.LFB19
 1874 0417 01       		.uleb128 0x1
 1875 0418 9C       		.byte	0x9c
 1876 0419 09       		.uleb128 0x9
 1877 041a 31010000 		.4byte	.LASF44
 1878 041e 01       		.byte	0x1
 1879 041f DD02     		.2byte	0x2dd
 1880 0421 00000000 		.4byte	.LFB20
 1881 0425 24000000 		.4byte	.LFE20-.LFB20
 1882 0429 01       		.uleb128 0x1
 1883 042a 9C       		.byte	0x9c
 1884 042b 62040000 		.4byte	0x462
 1885 042f 0A       		.uleb128 0xa
 1886 0430 FF040000 		.4byte	.LASF45
 1887 0434 01       		.byte	0x1
 1888 0435 DD02     		.2byte	0x2dd
 1889 0437 77000000 		.4byte	0x77
 1890 043b AD020000 		.4byte	.LLST22
 1891 043f 0B       		.uleb128 0xb
 1892 0440 BC040000 		.4byte	.LASF18
 1893 0444 01       		.byte	0x1
 1894 0445 DF02     		.2byte	0x2df
 1895 0447 6B000000 		.4byte	0x6b
 1896 044b D9020000 		.4byte	.LLST23
 1897 044f 08       		.uleb128 0x8
 1898 0450 08000000 		.4byte	.LVL45
 1899 0454 EA080000 		.4byte	0x8ea
 1900 0458 08       		.uleb128 0x8
 1901 0459 1E000000 		.4byte	.LVL47
 1902 045d F5080000 		.4byte	0x8f5
 1903 0461 00       		.byte	0
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 59


 1904 0462 09       		.uleb128 0x9
 1905 0463 3A040000 		.4byte	.LASF46
 1906 0467 01       		.byte	0x1
 1907 0468 F802     		.2byte	0x2f8
 1908 046a 00000000 		.4byte	.LFB21
 1909 046e 10000000 		.4byte	.LFE21-.LFB21
 1910 0472 01       		.uleb128 0x1
 1911 0473 9C       		.byte	0x9c
 1912 0474 89040000 		.4byte	0x489
 1913 0478 0A       		.uleb128 0xa
 1914 0479 9F040000 		.4byte	.LASF47
 1915 047d 01       		.byte	0x1
 1916 047e F802     		.2byte	0x2f8
 1917 0480 77000000 		.4byte	0x77
 1918 0484 EC020000 		.4byte	.LLST24
 1919 0488 00       		.byte	0
 1920 0489 0C       		.uleb128 0xc
 1921 048a BF020000 		.4byte	.LASF48
 1922 048e 01       		.byte	0x1
 1923 048f 0C03     		.2byte	0x30c
 1924 0491 77000000 		.4byte	0x77
 1925 0495 00000000 		.4byte	.LFB22
 1926 0499 10000000 		.4byte	.LFE22-.LFB22
 1927 049d 01       		.uleb128 0x1
 1928 049e 9C       		.byte	0x9c
 1929 049f 09       		.uleb128 0x9
 1930 04a0 B2030000 		.4byte	.LASF49
 1931 04a4 01       		.byte	0x1
 1932 04a5 2603     		.2byte	0x326
 1933 04a7 00000000 		.4byte	.LFB23
 1934 04ab 28000000 		.4byte	.LFE23-.LFB23
 1935 04af 01       		.uleb128 0x1
 1936 04b0 9C       		.byte	0x9c
 1937 04b1 E8040000 		.4byte	0x4e8
 1938 04b5 0A       		.uleb128 0xa
 1939 04b6 FF040000 		.4byte	.LASF45
 1940 04ba 01       		.byte	0x1
 1941 04bb 2603     		.2byte	0x326
 1942 04bd 77000000 		.4byte	0x77
 1943 04c1 0D030000 		.4byte	.LLST25
 1944 04c5 0B       		.uleb128 0xb
 1945 04c6 BC040000 		.4byte	.LASF18
 1946 04ca 01       		.byte	0x1
 1947 04cb 2803     		.2byte	0x328
 1948 04cd 6B000000 		.4byte	0x6b
 1949 04d1 39030000 		.4byte	.LLST26
 1950 04d5 08       		.uleb128 0x8
 1951 04d6 08000000 		.4byte	.LVL51
 1952 04da EA080000 		.4byte	0x8ea
 1953 04de 08       		.uleb128 0x8
 1954 04df 22000000 		.4byte	.LVL53
 1955 04e3 F5080000 		.4byte	0x8f5
 1956 04e7 00       		.byte	0
 1957 04e8 09       		.uleb128 0x9
 1958 04e9 4E020000 		.4byte	.LASF50
 1959 04ed 01       		.byte	0x1
 1960 04ee 4303     		.2byte	0x343
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 60


 1961 04f0 00000000 		.4byte	.LFB24
 1962 04f4 10000000 		.4byte	.LFE24-.LFB24
 1963 04f8 01       		.uleb128 0x1
 1964 04f9 9C       		.byte	0x9c
 1965 04fa 0F050000 		.4byte	0x50f
 1966 04fe 0A       		.uleb128 0xa
 1967 04ff A8020000 		.4byte	.LASF51
 1968 0503 01       		.byte	0x1
 1969 0504 4303     		.2byte	0x343
 1970 0506 77000000 		.4byte	0x77
 1971 050a 4C030000 		.4byte	.LLST27
 1972 050e 00       		.byte	0
 1973 050f 0C       		.uleb128 0xc
 1974 0510 34050000 		.4byte	.LASF52
 1975 0514 01       		.byte	0x1
 1976 0515 6E03     		.2byte	0x36e
 1977 0517 77000000 		.4byte	0x77
 1978 051b 00000000 		.4byte	.LFB25
 1979 051f 10000000 		.4byte	.LFE25-.LFB25
 1980 0523 01       		.uleb128 0x1
 1981 0524 9C       		.byte	0x9c
 1982 0525 09       		.uleb128 0x9
 1983 0526 AD000000 		.4byte	.LASF53
 1984 052a 01       		.byte	0x1
 1985 052b 9C03     		.2byte	0x39c
 1986 052d 00000000 		.4byte	.LFB26
 1987 0531 10000000 		.4byte	.LFE26-.LFB26
 1988 0535 01       		.uleb128 0x1
 1989 0536 9C       		.byte	0x9c
 1990 0537 4C050000 		.4byte	0x54c
 1991 053b 0A       		.uleb128 0xa
 1992 053c 94040000 		.4byte	.LASF54
 1993 0540 01       		.byte	0x1
 1994 0541 9C03     		.2byte	0x39c
 1995 0543 77000000 		.4byte	0x77
 1996 0547 6D030000 		.4byte	.LLST28
 1997 054b 00       		.byte	0
 1998 054c 0C       		.uleb128 0xc
 1999 054d 1E010000 		.4byte	.LASF55
 2000 0551 01       		.byte	0x1
 2001 0552 C503     		.2byte	0x3c5
 2002 0554 77000000 		.4byte	0x77
 2003 0558 00000000 		.4byte	.LFB27
 2004 055c 10000000 		.4byte	.LFE27-.LFB27
 2005 0560 01       		.uleb128 0x1
 2006 0561 9C       		.byte	0x9c
 2007 0562 0C       		.uleb128 0xc
 2008 0563 A2030000 		.4byte	.LASF56
 2009 0567 01       		.byte	0x1
 2010 0568 F303     		.2byte	0x3f3
 2011 056a 77000000 		.4byte	0x77
 2012 056e 00000000 		.4byte	.LFB28
 2013 0572 10000000 		.4byte	.LFE28-.LFB28
 2014 0576 01       		.uleb128 0x1
 2015 0577 9C       		.byte	0x9c
 2016 0578 0C       		.uleb128 0xc
 2017 0579 A9040000 		.4byte	.LASF57
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 61


 2018 057d 01       		.byte	0x1
 2019 057e 0804     		.2byte	0x408
 2020 0580 77000000 		.4byte	0x77
 2021 0584 00000000 		.4byte	.LFB29
 2022 0588 10000000 		.4byte	.LFE29-.LFB29
 2023 058c 01       		.uleb128 0x1
 2024 058d 9C       		.byte	0x9c
 2025 058e 09       		.uleb128 0x9
 2026 058f 58000000 		.4byte	.LASF58
 2027 0593 01       		.byte	0x1
 2028 0594 2304     		.2byte	0x423
 2029 0596 00000000 		.4byte	.LFB30
 2030 059a 24000000 		.4byte	.LFE30-.LFB30
 2031 059e 01       		.uleb128 0x1
 2032 059f 9C       		.byte	0x9c
 2033 05a0 D7050000 		.4byte	0x5d7
 2034 05a4 0A       		.uleb128 0xa
 2035 05a5 76010000 		.4byte	.LASF59
 2036 05a9 01       		.byte	0x1
 2037 05aa 2304     		.2byte	0x423
 2038 05ac 77000000 		.4byte	0x77
 2039 05b0 8E030000 		.4byte	.LLST29
 2040 05b4 0B       		.uleb128 0xb
 2041 05b5 BC040000 		.4byte	.LASF18
 2042 05b9 01       		.byte	0x1
 2043 05ba 2504     		.2byte	0x425
 2044 05bc 6B000000 		.4byte	0x6b
 2045 05c0 BA030000 		.4byte	.LLST30
 2046 05c4 08       		.uleb128 0x8
 2047 05c5 08000000 		.4byte	.LVL59
 2048 05c9 EA080000 		.4byte	0x8ea
 2049 05cd 08       		.uleb128 0x8
 2050 05ce 1C000000 		.4byte	.LVL61
 2051 05d2 F5080000 		.4byte	0x8f5
 2052 05d6 00       		.byte	0
 2053 05d7 09       		.uleb128 0x9
 2054 05d8 76040000 		.4byte	.LASF60
 2055 05dc 01       		.byte	0x1
 2056 05dd 4404     		.2byte	0x444
 2057 05df 00000000 		.4byte	.LFB31
 2058 05e3 24000000 		.4byte	.LFE31-.LFB31
 2059 05e7 01       		.uleb128 0x1
 2060 05e8 9C       		.byte	0x9c
 2061 05e9 20060000 		.4byte	0x620
 2062 05ed 0A       		.uleb128 0xa
 2063 05ee 76010000 		.4byte	.LASF59
 2064 05f2 01       		.byte	0x1
 2065 05f3 4404     		.2byte	0x444
 2066 05f5 77000000 		.4byte	0x77
 2067 05f9 CD030000 		.4byte	.LLST31
 2068 05fd 0B       		.uleb128 0xb
 2069 05fe BC040000 		.4byte	.LASF18
 2070 0602 01       		.byte	0x1
 2071 0603 4604     		.2byte	0x446
 2072 0605 6B000000 		.4byte	0x6b
 2073 0609 F9030000 		.4byte	.LLST32
 2074 060d 08       		.uleb128 0x8
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 62


 2075 060e 08000000 		.4byte	.LVL63
 2076 0612 EA080000 		.4byte	0x8ea
 2077 0616 08       		.uleb128 0x8
 2078 0617 1E000000 		.4byte	.LVL65
 2079 061b F5080000 		.4byte	0x8f5
 2080 061f 00       		.byte	0
 2081 0620 09       		.uleb128 0x9
 2082 0621 65010000 		.4byte	.LASF61
 2083 0625 01       		.byte	0x1
 2084 0626 6504     		.2byte	0x465
 2085 0628 00000000 		.4byte	.LFB32
 2086 062c 28000000 		.4byte	.LFE32-.LFB32
 2087 0630 01       		.uleb128 0x1
 2088 0631 9C       		.byte	0x9c
 2089 0632 69060000 		.4byte	0x669
 2090 0636 0A       		.uleb128 0xa
 2091 0637 76010000 		.4byte	.LASF59
 2092 063b 01       		.byte	0x1
 2093 063c 6504     		.2byte	0x465
 2094 063e 77000000 		.4byte	0x77
 2095 0642 0C040000 		.4byte	.LLST33
 2096 0646 0B       		.uleb128 0xb
 2097 0647 BC040000 		.4byte	.LASF18
 2098 064b 01       		.byte	0x1
 2099 064c 6704     		.2byte	0x467
 2100 064e 6B000000 		.4byte	0x6b
 2101 0652 38040000 		.4byte	.LLST34
 2102 0656 08       		.uleb128 0x8
 2103 0657 08000000 		.4byte	.LVL67
 2104 065b EA080000 		.4byte	0x8ea
 2105 065f 08       		.uleb128 0x8
 2106 0660 1E000000 		.4byte	.LVL69
 2107 0664 F5080000 		.4byte	0x8f5
 2108 0668 00       		.byte	0
 2109 0669 09       		.uleb128 0x9
 2110 066a 9F010000 		.4byte	.LASF62
 2111 066e 01       		.byte	0x1
 2112 066f 8504     		.2byte	0x485
 2113 0671 00000000 		.4byte	.LFB33
 2114 0675 24000000 		.4byte	.LFE33-.LFB33
 2115 0679 01       		.uleb128 0x1
 2116 067a 9C       		.byte	0x9c
 2117 067b B2060000 		.4byte	0x6b2
 2118 067f 0A       		.uleb128 0xa
 2119 0680 76010000 		.4byte	.LASF59
 2120 0684 01       		.byte	0x1
 2121 0685 8504     		.2byte	0x485
 2122 0687 77000000 		.4byte	0x77
 2123 068b 4B040000 		.4byte	.LLST35
 2124 068f 0B       		.uleb128 0xb
 2125 0690 BC040000 		.4byte	.LASF18
 2126 0694 01       		.byte	0x1
 2127 0695 8704     		.2byte	0x487
 2128 0697 6B000000 		.4byte	0x6b
 2129 069b 77040000 		.4byte	.LLST36
 2130 069f 08       		.uleb128 0x8
 2131 06a0 08000000 		.4byte	.LVL71
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 63


 2132 06a4 EA080000 		.4byte	0x8ea
 2133 06a8 08       		.uleb128 0x8
 2134 06a9 1E000000 		.4byte	.LVL73
 2135 06ad F5080000 		.4byte	0x8f5
 2136 06b1 00       		.byte	0
 2137 06b2 09       		.uleb128 0x9
 2138 06b3 CD040000 		.4byte	.LASF63
 2139 06b7 01       		.byte	0x1
 2140 06b8 A604     		.2byte	0x4a6
 2141 06ba 00000000 		.4byte	.LFB34
 2142 06be 24000000 		.4byte	.LFE34-.LFB34
 2143 06c2 01       		.uleb128 0x1
 2144 06c3 9C       		.byte	0x9c
 2145 06c4 FB060000 		.4byte	0x6fb
 2146 06c8 0A       		.uleb128 0xa
 2147 06c9 76010000 		.4byte	.LASF59
 2148 06cd 01       		.byte	0x1
 2149 06ce A604     		.2byte	0x4a6
 2150 06d0 77000000 		.4byte	0x77
 2151 06d4 8A040000 		.4byte	.LLST37
 2152 06d8 0B       		.uleb128 0xb
 2153 06d9 BC040000 		.4byte	.LASF18
 2154 06dd 01       		.byte	0x1
 2155 06de A804     		.2byte	0x4a8
 2156 06e0 6B000000 		.4byte	0x6b
 2157 06e4 B6040000 		.4byte	.LLST38
 2158 06e8 08       		.uleb128 0x8
 2159 06e9 08000000 		.4byte	.LVL75
 2160 06ed EA080000 		.4byte	0x8ea
 2161 06f1 08       		.uleb128 0x8
 2162 06f2 1E000000 		.4byte	.LVL77
 2163 06f6 F5080000 		.4byte	0x8f5
 2164 06fa 00       		.byte	0
 2165 06fb 09       		.uleb128 0x9
 2166 06fc 3B020000 		.4byte	.LASF64
 2167 0700 01       		.byte	0x1
 2168 0701 CE04     		.2byte	0x4ce
 2169 0703 00000000 		.4byte	.LFB35
 2170 0707 1C000000 		.4byte	.LFE35-.LFB35
 2171 070b 01       		.uleb128 0x1
 2172 070c 9C       		.byte	0x9c
 2173 070d 54070000 		.4byte	0x754
 2174 0711 0A       		.uleb128 0xa
 2175 0712 82010000 		.4byte	.LASF35
 2176 0716 01       		.byte	0x1
 2177 0717 CE04     		.2byte	0x4ce
 2178 0719 77000000 		.4byte	0x77
 2179 071d C9040000 		.4byte	.LLST39
 2180 0721 0A       		.uleb128 0xa
 2181 0722 CF010000 		.4byte	.LASF65
 2182 0726 01       		.byte	0x1
 2183 0727 CE04     		.2byte	0x4ce
 2184 0729 77000000 		.4byte	0x77
 2185 072d F5040000 		.4byte	.LLST40
 2186 0731 0B       		.uleb128 0xb
 2187 0732 BC040000 		.4byte	.LASF18
 2188 0736 01       		.byte	0x1
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 64


 2189 0737 D004     		.2byte	0x4d0
 2190 0739 6B000000 		.4byte	0x6b
 2191 073d 21050000 		.4byte	.LLST41
 2192 0741 08       		.uleb128 0x8
 2193 0742 0A000000 		.4byte	.LVL79
 2194 0746 EA080000 		.4byte	0x8ea
 2195 074a 08       		.uleb128 0x8
 2196 074b 14000000 		.4byte	.LVL81
 2197 074f F5080000 		.4byte	0x8f5
 2198 0753 00       		.byte	0
 2199 0754 06       		.uleb128 0x6
 2200 0755 06000000 		.4byte	.LASF66
 2201 0759 01       		.byte	0x1
 2202 075a B1       		.byte	0xb1
 2203 075b 00000000 		.4byte	.LFB3
 2204 075f 24000000 		.4byte	.LFE3-.LFB3
 2205 0763 01       		.uleb128 0x1
 2206 0764 9C       		.byte	0x9c
 2207 0765 9F070000 		.4byte	0x79f
 2208 0769 07       		.uleb128 0x7
 2209 076a BC040000 		.4byte	.LASF18
 2210 076e 01       		.byte	0x1
 2211 076f B3       		.byte	0xb3
 2212 0770 6B000000 		.4byte	0x6b
 2213 0774 34050000 		.4byte	.LLST42
 2214 0778 08       		.uleb128 0x8
 2215 0779 06000000 		.4byte	.LVL83
 2216 077d EA080000 		.4byte	0x8ea
 2217 0781 08       		.uleb128 0x8
 2218 0782 14000000 		.4byte	.LVL84
 2219 0786 F5080000 		.4byte	0x8f5
 2220 078a 0D       		.uleb128 0xd
 2221 078b 1C000000 		.4byte	.LVL85
 2222 078f FB060000 		.4byte	0x6fb
 2223 0793 0E       		.uleb128 0xe
 2224 0794 01       		.uleb128 0x1
 2225 0795 51       		.byte	0x51
 2226 0796 01       		.uleb128 0x1
 2227 0797 48       		.byte	0x48
 2228 0798 0E       		.uleb128 0xe
 2229 0799 01       		.uleb128 0x1
 2230 079a 50       		.byte	0x50
 2231 079b 01       		.uleb128 0x1
 2232 079c 31       		.byte	0x31
 2233 079d 00       		.byte	0
 2234 079e 00       		.byte	0
 2235 079f 0C       		.uleb128 0xc
 2236 07a0 87010000 		.4byte	.LASF67
 2237 07a4 01       		.byte	0x1
 2238 07a5 EB04     		.2byte	0x4eb
 2239 07a7 77000000 		.4byte	0x77
 2240 07ab 00000000 		.4byte	.LFB36
 2241 07af 14000000 		.4byte	.LFE36-.LFB36
 2242 07b3 01       		.uleb128 0x1
 2243 07b4 9C       		.byte	0x9c
 2244 07b5 09       		.uleb128 0x9
 2245 07b6 C1000000 		.4byte	.LASF68
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 65


 2246 07ba 01       		.byte	0x1
 2247 07bb 0405     		.2byte	0x504
 2248 07bd 00000000 		.4byte	.LFB37
 2249 07c1 0C000000 		.4byte	.LFE37-.LFB37
 2250 07c5 01       		.uleb128 0x1
 2251 07c6 9C       		.byte	0x9c
 2252 07c7 DA070000 		.4byte	0x7da
 2253 07cb 0F       		.uleb128 0xf
 2254 07cc 22040000 		.4byte	.LASF69
 2255 07d0 01       		.byte	0x1
 2256 07d1 0405     		.2byte	0x504
 2257 07d3 77000000 		.4byte	0x77
 2258 07d7 01       		.uleb128 0x1
 2259 07d8 50       		.byte	0x50
 2260 07d9 00       		.byte	0
 2261 07da 06       		.uleb128 0x6
 2262 07db D2030000 		.4byte	.LASF70
 2263 07df 01       		.byte	0x1
 2264 07e0 26       		.byte	0x26
 2265 07e1 00000000 		.4byte	.LFB2
 2266 07e5 48000000 		.4byte	.LFE2-.LFB2
 2267 07e9 01       		.uleb128 0x1
 2268 07ea 9C       		.byte	0x9c
 2269 07eb 3B080000 		.4byte	0x83b
 2270 07ef 10       		.uleb128 0x10
 2271 07f0 14000000 		.4byte	.LVL87
 2272 07f4 56030000 		.4byte	0x356
 2273 07f8 02080000 		.4byte	0x802
 2274 07fc 0E       		.uleb128 0xe
 2275 07fd 01       		.uleb128 0x1
 2276 07fe 50       		.byte	0x50
 2277 07ff 01       		.uleb128 0x1
 2278 0800 30       		.byte	0x30
 2279 0801 00       		.byte	0
 2280 0802 10       		.uleb128 0x10
 2281 0803 24000000 		.4byte	.LVL88
 2282 0807 B5070000 		.4byte	0x7b5
 2283 080b 15080000 		.4byte	0x815
 2284 080f 0E       		.uleb128 0xe
 2285 0810 01       		.uleb128 0x1
 2286 0811 50       		.byte	0x50
 2287 0812 01       		.uleb128 0x1
 2288 0813 31       		.byte	0x31
 2289 0814 00       		.byte	0
 2290 0815 10       		.uleb128 0x10
 2291 0816 32000000 		.4byte	.LVL89
 2292 081a DC030000 		.4byte	0x3dc
 2293 081e 2A080000 		.4byte	0x82a
 2294 0822 0E       		.uleb128 0xe
 2295 0823 01       		.uleb128 0x1
 2296 0824 50       		.byte	0x50
 2297 0825 03       		.uleb128 0x3
 2298 0826 0A       		.byte	0xa
 2299 0827 F401     		.2byte	0x1f4
 2300 0829 00       		.byte	0
 2301 082a 0D       		.uleb128 0xd
 2302 082b 38000000 		.4byte	.LVL90
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 66


 2303 082f E8040000 		.4byte	0x4e8
 2304 0833 0E       		.uleb128 0xe
 2305 0834 01       		.uleb128 0x1
 2306 0835 50       		.byte	0x50
 2307 0836 02       		.uleb128 0x2
 2308 0837 08       		.byte	0x8
 2309 0838 FA       		.byte	0xfa
 2310 0839 00       		.byte	0
 2311 083a 00       		.byte	0
 2312 083b 06       		.uleb128 0x6
 2313 083c 30040000 		.4byte	.LASF71
 2314 0840 01       		.byte	0x1
 2315 0841 E0       		.byte	0xe0
 2316 0842 00000000 		.4byte	.LFB4
 2317 0846 20000000 		.4byte	.LFE4-.LFB4
 2318 084a 01       		.uleb128 0x1
 2319 084b 9C       		.byte	0x9c
 2320 084c 63080000 		.4byte	0x863
 2321 0850 08       		.uleb128 0x8
 2322 0851 0E000000 		.4byte	.LVL91
 2323 0855 DA070000 		.4byte	0x7da
 2324 0859 08       		.uleb128 0x8
 2325 085a 18000000 		.4byte	.LVL92
 2326 085e 54070000 		.4byte	0x754
 2327 0862 00       		.byte	0
 2328 0863 0C       		.uleb128 0xc
 2329 0864 05040000 		.4byte	.LASF72
 2330 0868 01       		.byte	0x1
 2331 0869 1B05     		.2byte	0x51b
 2332 086b 77000000 		.4byte	0x77
 2333 086f 00000000 		.4byte	.LFB38
 2334 0873 0C000000 		.4byte	.LFE38-.LFB38
 2335 0877 01       		.uleb128 0x1
 2336 0878 9C       		.byte	0x9c
 2337 0879 0C       		.uleb128 0xc
 2338 087a 0A050000 		.4byte	.LASF73
 2339 087e 01       		.byte	0x1
 2340 087f 3205     		.2byte	0x532
 2341 0881 77000000 		.4byte	0x77
 2342 0885 00000000 		.4byte	.LFB39
 2343 0889 0C000000 		.4byte	.LFE39-.LFB39
 2344 088d 01       		.uleb128 0x1
 2345 088e 9C       		.byte	0x9c
 2346 088f 09       		.uleb128 0x9
 2347 0890 D6000000 		.4byte	.LASF74
 2348 0894 01       		.byte	0x1
 2349 0895 4905     		.2byte	0x549
 2350 0897 00000000 		.4byte	.LFB40
 2351 089b 0C000000 		.4byte	.LFE40-.LFB40
 2352 089f 01       		.uleb128 0x1
 2353 08a0 9C       		.byte	0x9c
 2354 08a1 B4080000 		.4byte	0x8b4
 2355 08a5 0F       		.uleb128 0xf
 2356 08a6 22040000 		.4byte	.LASF69
 2357 08aa 01       		.byte	0x1
 2358 08ab 4905     		.2byte	0x549
 2359 08ad 77000000 		.4byte	0x77
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 67


 2360 08b1 01       		.uleb128 0x1
 2361 08b2 50       		.byte	0x50
 2362 08b3 00       		.byte	0
 2363 08b4 09       		.uleb128 0x9
 2364 08b5 65040000 		.4byte	.LASF75
 2365 08b9 01       		.byte	0x1
 2366 08ba 6005     		.2byte	0x560
 2367 08bc 00000000 		.4byte	.LFB41
 2368 08c0 0C000000 		.4byte	.LFE41-.LFB41
 2369 08c4 01       		.uleb128 0x1
 2370 08c5 9C       		.byte	0x9c
 2371 08c6 D9080000 		.4byte	0x8d9
 2372 08ca 0F       		.uleb128 0xf
 2373 08cb 22040000 		.4byte	.LASF69
 2374 08cf 01       		.byte	0x1
 2375 08d0 6005     		.2byte	0x560
 2376 08d2 77000000 		.4byte	0x77
 2377 08d6 01       		.uleb128 0x1
 2378 08d7 50       		.byte	0x50
 2379 08d8 00       		.byte	0
 2380 08d9 11       		.uleb128 0x11
 2381 08da 75020000 		.4byte	.LASF79
 2382 08de 01       		.byte	0x1
 2383 08df 15       		.byte	0x15
 2384 08e0 6B000000 		.4byte	0x6b
 2385 08e4 05       		.uleb128 0x5
 2386 08e5 03       		.byte	0x3
 2387 08e6 00000000 		.4byte	PWM_initVar
 2388 08ea 12       		.uleb128 0x12
 2389 08eb F2010000 		.4byte	.LASF80
 2390 08ef 03       		.byte	0x3
 2391 08f0 E3       		.byte	0xe3
 2392 08f1 6B000000 		.4byte	0x6b
 2393 08f5 13       		.uleb128 0x13
 2394 08f6 11000000 		.4byte	.LASF81
 2395 08fa 03       		.byte	0x3
 2396 08fb E4       		.byte	0xe4
 2397 08fc 14       		.uleb128 0x14
 2398 08fd 6B000000 		.4byte	0x6b
 2399 0901 00       		.byte	0
 2400 0902 00       		.byte	0
 2401              		.section	.debug_abbrev,"",%progbits
 2402              	.Ldebug_abbrev0:
 2403 0000 01       		.uleb128 0x1
 2404 0001 11       		.uleb128 0x11
 2405 0002 01       		.byte	0x1
 2406 0003 25       		.uleb128 0x25
 2407 0004 0E       		.uleb128 0xe
 2408 0005 13       		.uleb128 0x13
 2409 0006 0B       		.uleb128 0xb
 2410 0007 03       		.uleb128 0x3
 2411 0008 0E       		.uleb128 0xe
 2412 0009 1B       		.uleb128 0x1b
 2413 000a 0E       		.uleb128 0xe
 2414 000b 55       		.uleb128 0x55
 2415 000c 17       		.uleb128 0x17
 2416 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 68


 2417 000e 01       		.uleb128 0x1
 2418 000f 10       		.uleb128 0x10
 2419 0010 17       		.uleb128 0x17
 2420 0011 00       		.byte	0
 2421 0012 00       		.byte	0
 2422 0013 02       		.uleb128 0x2
 2423 0014 24       		.uleb128 0x24
 2424 0015 00       		.byte	0
 2425 0016 0B       		.uleb128 0xb
 2426 0017 0B       		.uleb128 0xb
 2427 0018 3E       		.uleb128 0x3e
 2428 0019 0B       		.uleb128 0xb
 2429 001a 03       		.uleb128 0x3
 2430 001b 0E       		.uleb128 0xe
 2431 001c 00       		.byte	0
 2432 001d 00       		.byte	0
 2433 001e 03       		.uleb128 0x3
 2434 001f 24       		.uleb128 0x24
 2435 0020 00       		.byte	0
 2436 0021 0B       		.uleb128 0xb
 2437 0022 0B       		.uleb128 0xb
 2438 0023 3E       		.uleb128 0x3e
 2439 0024 0B       		.uleb128 0xb
 2440 0025 03       		.uleb128 0x3
 2441 0026 08       		.uleb128 0x8
 2442 0027 00       		.byte	0
 2443 0028 00       		.byte	0
 2444 0029 04       		.uleb128 0x4
 2445 002a 16       		.uleb128 0x16
 2446 002b 00       		.byte	0
 2447 002c 03       		.uleb128 0x3
 2448 002d 0E       		.uleb128 0xe
 2449 002e 3A       		.uleb128 0x3a
 2450 002f 0B       		.uleb128 0xb
 2451 0030 3B       		.uleb128 0x3b
 2452 0031 05       		.uleb128 0x5
 2453 0032 49       		.uleb128 0x49
 2454 0033 13       		.uleb128 0x13
 2455 0034 00       		.byte	0
 2456 0035 00       		.byte	0
 2457 0036 05       		.uleb128 0x5
 2458 0037 35       		.uleb128 0x35
 2459 0038 00       		.byte	0
 2460 0039 49       		.uleb128 0x49
 2461 003a 13       		.uleb128 0x13
 2462 003b 00       		.byte	0
 2463 003c 00       		.byte	0
 2464 003d 06       		.uleb128 0x6
 2465 003e 2E       		.uleb128 0x2e
 2466 003f 01       		.byte	0x1
 2467 0040 3F       		.uleb128 0x3f
 2468 0041 19       		.uleb128 0x19
 2469 0042 03       		.uleb128 0x3
 2470 0043 0E       		.uleb128 0xe
 2471 0044 3A       		.uleb128 0x3a
 2472 0045 0B       		.uleb128 0xb
 2473 0046 3B       		.uleb128 0x3b
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 69


 2474 0047 0B       		.uleb128 0xb
 2475 0048 27       		.uleb128 0x27
 2476 0049 19       		.uleb128 0x19
 2477 004a 11       		.uleb128 0x11
 2478 004b 01       		.uleb128 0x1
 2479 004c 12       		.uleb128 0x12
 2480 004d 06       		.uleb128 0x6
 2481 004e 40       		.uleb128 0x40
 2482 004f 18       		.uleb128 0x18
 2483 0050 9742     		.uleb128 0x2117
 2484 0052 19       		.uleb128 0x19
 2485 0053 01       		.uleb128 0x1
 2486 0054 13       		.uleb128 0x13
 2487 0055 00       		.byte	0
 2488 0056 00       		.byte	0
 2489 0057 07       		.uleb128 0x7
 2490 0058 34       		.uleb128 0x34
 2491 0059 00       		.byte	0
 2492 005a 03       		.uleb128 0x3
 2493 005b 0E       		.uleb128 0xe
 2494 005c 3A       		.uleb128 0x3a
 2495 005d 0B       		.uleb128 0xb
 2496 005e 3B       		.uleb128 0x3b
 2497 005f 0B       		.uleb128 0xb
 2498 0060 49       		.uleb128 0x49
 2499 0061 13       		.uleb128 0x13
 2500 0062 02       		.uleb128 0x2
 2501 0063 17       		.uleb128 0x17
 2502 0064 00       		.byte	0
 2503 0065 00       		.byte	0
 2504 0066 08       		.uleb128 0x8
 2505 0067 898201   		.uleb128 0x4109
 2506 006a 00       		.byte	0
 2507 006b 11       		.uleb128 0x11
 2508 006c 01       		.uleb128 0x1
 2509 006d 31       		.uleb128 0x31
 2510 006e 13       		.uleb128 0x13
 2511 006f 00       		.byte	0
 2512 0070 00       		.byte	0
 2513 0071 09       		.uleb128 0x9
 2514 0072 2E       		.uleb128 0x2e
 2515 0073 01       		.byte	0x1
 2516 0074 3F       		.uleb128 0x3f
 2517 0075 19       		.uleb128 0x19
 2518 0076 03       		.uleb128 0x3
 2519 0077 0E       		.uleb128 0xe
 2520 0078 3A       		.uleb128 0x3a
 2521 0079 0B       		.uleb128 0xb
 2522 007a 3B       		.uleb128 0x3b
 2523 007b 05       		.uleb128 0x5
 2524 007c 27       		.uleb128 0x27
 2525 007d 19       		.uleb128 0x19
 2526 007e 11       		.uleb128 0x11
 2527 007f 01       		.uleb128 0x1
 2528 0080 12       		.uleb128 0x12
 2529 0081 06       		.uleb128 0x6
 2530 0082 40       		.uleb128 0x40
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 70


 2531 0083 18       		.uleb128 0x18
 2532 0084 9742     		.uleb128 0x2117
 2533 0086 19       		.uleb128 0x19
 2534 0087 01       		.uleb128 0x1
 2535 0088 13       		.uleb128 0x13
 2536 0089 00       		.byte	0
 2537 008a 00       		.byte	0
 2538 008b 0A       		.uleb128 0xa
 2539 008c 05       		.uleb128 0x5
 2540 008d 00       		.byte	0
 2541 008e 03       		.uleb128 0x3
 2542 008f 0E       		.uleb128 0xe
 2543 0090 3A       		.uleb128 0x3a
 2544 0091 0B       		.uleb128 0xb
 2545 0092 3B       		.uleb128 0x3b
 2546 0093 05       		.uleb128 0x5
 2547 0094 49       		.uleb128 0x49
 2548 0095 13       		.uleb128 0x13
 2549 0096 02       		.uleb128 0x2
 2550 0097 17       		.uleb128 0x17
 2551 0098 00       		.byte	0
 2552 0099 00       		.byte	0
 2553 009a 0B       		.uleb128 0xb
 2554 009b 34       		.uleb128 0x34
 2555 009c 00       		.byte	0
 2556 009d 03       		.uleb128 0x3
 2557 009e 0E       		.uleb128 0xe
 2558 009f 3A       		.uleb128 0x3a
 2559 00a0 0B       		.uleb128 0xb
 2560 00a1 3B       		.uleb128 0x3b
 2561 00a2 05       		.uleb128 0x5
 2562 00a3 49       		.uleb128 0x49
 2563 00a4 13       		.uleb128 0x13
 2564 00a5 02       		.uleb128 0x2
 2565 00a6 17       		.uleb128 0x17
 2566 00a7 00       		.byte	0
 2567 00a8 00       		.byte	0
 2568 00a9 0C       		.uleb128 0xc
 2569 00aa 2E       		.uleb128 0x2e
 2570 00ab 00       		.byte	0
 2571 00ac 3F       		.uleb128 0x3f
 2572 00ad 19       		.uleb128 0x19
 2573 00ae 03       		.uleb128 0x3
 2574 00af 0E       		.uleb128 0xe
 2575 00b0 3A       		.uleb128 0x3a
 2576 00b1 0B       		.uleb128 0xb
 2577 00b2 3B       		.uleb128 0x3b
 2578 00b3 05       		.uleb128 0x5
 2579 00b4 27       		.uleb128 0x27
 2580 00b5 19       		.uleb128 0x19
 2581 00b6 49       		.uleb128 0x49
 2582 00b7 13       		.uleb128 0x13
 2583 00b8 11       		.uleb128 0x11
 2584 00b9 01       		.uleb128 0x1
 2585 00ba 12       		.uleb128 0x12
 2586 00bb 06       		.uleb128 0x6
 2587 00bc 40       		.uleb128 0x40
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 71


 2588 00bd 18       		.uleb128 0x18
 2589 00be 9742     		.uleb128 0x2117
 2590 00c0 19       		.uleb128 0x19
 2591 00c1 00       		.byte	0
 2592 00c2 00       		.byte	0
 2593 00c3 0D       		.uleb128 0xd
 2594 00c4 898201   		.uleb128 0x4109
 2595 00c7 01       		.byte	0x1
 2596 00c8 11       		.uleb128 0x11
 2597 00c9 01       		.uleb128 0x1
 2598 00ca 31       		.uleb128 0x31
 2599 00cb 13       		.uleb128 0x13
 2600 00cc 00       		.byte	0
 2601 00cd 00       		.byte	0
 2602 00ce 0E       		.uleb128 0xe
 2603 00cf 8A8201   		.uleb128 0x410a
 2604 00d2 00       		.byte	0
 2605 00d3 02       		.uleb128 0x2
 2606 00d4 18       		.uleb128 0x18
 2607 00d5 9142     		.uleb128 0x2111
 2608 00d7 18       		.uleb128 0x18
 2609 00d8 00       		.byte	0
 2610 00d9 00       		.byte	0
 2611 00da 0F       		.uleb128 0xf
 2612 00db 05       		.uleb128 0x5
 2613 00dc 00       		.byte	0
 2614 00dd 03       		.uleb128 0x3
 2615 00de 0E       		.uleb128 0xe
 2616 00df 3A       		.uleb128 0x3a
 2617 00e0 0B       		.uleb128 0xb
 2618 00e1 3B       		.uleb128 0x3b
 2619 00e2 05       		.uleb128 0x5
 2620 00e3 49       		.uleb128 0x49
 2621 00e4 13       		.uleb128 0x13
 2622 00e5 02       		.uleb128 0x2
 2623 00e6 18       		.uleb128 0x18
 2624 00e7 00       		.byte	0
 2625 00e8 00       		.byte	0
 2626 00e9 10       		.uleb128 0x10
 2627 00ea 898201   		.uleb128 0x4109
 2628 00ed 01       		.byte	0x1
 2629 00ee 11       		.uleb128 0x11
 2630 00ef 01       		.uleb128 0x1
 2631 00f0 31       		.uleb128 0x31
 2632 00f1 13       		.uleb128 0x13
 2633 00f2 01       		.uleb128 0x1
 2634 00f3 13       		.uleb128 0x13
 2635 00f4 00       		.byte	0
 2636 00f5 00       		.byte	0
 2637 00f6 11       		.uleb128 0x11
 2638 00f7 34       		.uleb128 0x34
 2639 00f8 00       		.byte	0
 2640 00f9 03       		.uleb128 0x3
 2641 00fa 0E       		.uleb128 0xe
 2642 00fb 3A       		.uleb128 0x3a
 2643 00fc 0B       		.uleb128 0xb
 2644 00fd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 72


 2645 00fe 0B       		.uleb128 0xb
 2646 00ff 49       		.uleb128 0x49
 2647 0100 13       		.uleb128 0x13
 2648 0101 3F       		.uleb128 0x3f
 2649 0102 19       		.uleb128 0x19
 2650 0103 02       		.uleb128 0x2
 2651 0104 18       		.uleb128 0x18
 2652 0105 00       		.byte	0
 2653 0106 00       		.byte	0
 2654 0107 12       		.uleb128 0x12
 2655 0108 2E       		.uleb128 0x2e
 2656 0109 00       		.byte	0
 2657 010a 3F       		.uleb128 0x3f
 2658 010b 19       		.uleb128 0x19
 2659 010c 03       		.uleb128 0x3
 2660 010d 0E       		.uleb128 0xe
 2661 010e 3A       		.uleb128 0x3a
 2662 010f 0B       		.uleb128 0xb
 2663 0110 3B       		.uleb128 0x3b
 2664 0111 0B       		.uleb128 0xb
 2665 0112 27       		.uleb128 0x27
 2666 0113 19       		.uleb128 0x19
 2667 0114 49       		.uleb128 0x49
 2668 0115 13       		.uleb128 0x13
 2669 0116 3C       		.uleb128 0x3c
 2670 0117 19       		.uleb128 0x19
 2671 0118 00       		.byte	0
 2672 0119 00       		.byte	0
 2673 011a 13       		.uleb128 0x13
 2674 011b 2E       		.uleb128 0x2e
 2675 011c 01       		.byte	0x1
 2676 011d 3F       		.uleb128 0x3f
 2677 011e 19       		.uleb128 0x19
 2678 011f 03       		.uleb128 0x3
 2679 0120 0E       		.uleb128 0xe
 2680 0121 3A       		.uleb128 0x3a
 2681 0122 0B       		.uleb128 0xb
 2682 0123 3B       		.uleb128 0x3b
 2683 0124 0B       		.uleb128 0xb
 2684 0125 27       		.uleb128 0x27
 2685 0126 19       		.uleb128 0x19
 2686 0127 3C       		.uleb128 0x3c
 2687 0128 19       		.uleb128 0x19
 2688 0129 00       		.byte	0
 2689 012a 00       		.byte	0
 2690 012b 14       		.uleb128 0x14
 2691 012c 05       		.uleb128 0x5
 2692 012d 00       		.byte	0
 2693 012e 49       		.uleb128 0x49
 2694 012f 13       		.uleb128 0x13
 2695 0130 00       		.byte	0
 2696 0131 00       		.byte	0
 2697 0132 00       		.byte	0
 2698              		.section	.debug_loc,"",%progbits
 2699              	.Ldebug_loc0:
 2700              	.LLST0:
 2701 0000 06000000 		.4byte	.LVL0
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 73


 2702 0004 13000000 		.4byte	.LVL1-1
 2703 0008 0100     		.2byte	0x1
 2704 000a 50       		.byte	0x50
 2705 000b 00000000 		.4byte	0
 2706 000f 00000000 		.4byte	0
 2707              	.LLST1:
 2708 0013 00000000 		.4byte	.LVL2
 2709 0017 07000000 		.4byte	.LVL3-1
 2710 001b 0100     		.2byte	0x1
 2711 001d 50       		.byte	0x50
 2712 001e 07000000 		.4byte	.LVL3-1
 2713 0022 16000000 		.4byte	.LVL4
 2714 0026 0100     		.2byte	0x1
 2715 0028 54       		.byte	0x54
 2716 0029 16000000 		.4byte	.LVL4
 2717 002d 28000000 		.4byte	.LFE6
 2718 0031 0400     		.2byte	0x4
 2719 0033 F3       		.byte	0xf3
 2720 0034 01       		.uleb128 0x1
 2721 0035 50       		.byte	0x50
 2722 0036 9F       		.byte	0x9f
 2723 0037 00000000 		.4byte	0
 2724 003b 00000000 		.4byte	0
 2725              	.LLST2:
 2726 003f 08000000 		.4byte	.LVL3
 2727 0043 1B000000 		.4byte	.LVL5-1
 2728 0047 0100     		.2byte	0x1
 2729 0049 50       		.byte	0x50
 2730 004a 00000000 		.4byte	0
 2731 004e 00000000 		.4byte	0
 2732              	.LLST3:
 2733 0052 00000000 		.4byte	.LVL6
 2734 0056 07000000 		.4byte	.LVL7-1
 2735 005a 0100     		.2byte	0x1
 2736 005c 50       		.byte	0x50
 2737 005d 07000000 		.4byte	.LVL7-1
 2738 0061 16000000 		.4byte	.LVL8
 2739 0065 0100     		.2byte	0x1
 2740 0067 54       		.byte	0x54
 2741 0068 16000000 		.4byte	.LVL8
 2742 006c 28000000 		.4byte	.LFE7
 2743 0070 0400     		.2byte	0x4
 2744 0072 F3       		.byte	0xf3
 2745 0073 01       		.uleb128 0x1
 2746 0074 50       		.byte	0x50
 2747 0075 9F       		.byte	0x9f
 2748 0076 00000000 		.4byte	0
 2749 007a 00000000 		.4byte	0
 2750              	.LLST4:
 2751 007e 08000000 		.4byte	.LVL7
 2752 0082 1B000000 		.4byte	.LVL9-1
 2753 0086 0100     		.2byte	0x1
 2754 0088 50       		.byte	0x50
 2755 0089 00000000 		.4byte	0
 2756 008d 00000000 		.4byte	0
 2757              	.LLST5:
 2758 0091 00000000 		.4byte	.LVL10
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 74


 2759 0095 07000000 		.4byte	.LVL11-1
 2760 0099 0100     		.2byte	0x1
 2761 009b 50       		.byte	0x50
 2762 009c 07000000 		.4byte	.LVL11-1
 2763 00a0 16000000 		.4byte	.LVL12
 2764 00a4 0100     		.2byte	0x1
 2765 00a6 54       		.byte	0x54
 2766 00a7 16000000 		.4byte	.LVL12
 2767 00ab 28000000 		.4byte	.LFE8
 2768 00af 0400     		.2byte	0x4
 2769 00b1 F3       		.byte	0xf3
 2770 00b2 01       		.uleb128 0x1
 2771 00b3 50       		.byte	0x50
 2772 00b4 9F       		.byte	0x9f
 2773 00b5 00000000 		.4byte	0
 2774 00b9 00000000 		.4byte	0
 2775              	.LLST6:
 2776 00bd 08000000 		.4byte	.LVL11
 2777 00c1 1B000000 		.4byte	.LVL13-1
 2778 00c5 0100     		.2byte	0x1
 2779 00c7 50       		.byte	0x50
 2780 00c8 00000000 		.4byte	0
 2781 00cc 00000000 		.4byte	0
 2782              	.LLST7:
 2783 00d0 00000000 		.4byte	.LVL14
 2784 00d4 07000000 		.4byte	.LVL15-1
 2785 00d8 0100     		.2byte	0x1
 2786 00da 50       		.byte	0x50
 2787 00db 07000000 		.4byte	.LVL15-1
 2788 00df 18000000 		.4byte	.LVL16
 2789 00e3 0100     		.2byte	0x1
 2790 00e5 54       		.byte	0x54
 2791 00e6 18000000 		.4byte	.LVL16
 2792 00ea 2C000000 		.4byte	.LFE9
 2793 00ee 0400     		.2byte	0x4
 2794 00f0 F3       		.byte	0xf3
 2795 00f1 01       		.uleb128 0x1
 2796 00f2 50       		.byte	0x50
 2797 00f3 9F       		.byte	0x9f
 2798 00f4 00000000 		.4byte	0
 2799 00f8 00000000 		.4byte	0
 2800              	.LLST8:
 2801 00fc 08000000 		.4byte	.LVL15
 2802 0100 21000000 		.4byte	.LVL17-1
 2803 0104 0100     		.2byte	0x1
 2804 0106 50       		.byte	0x50
 2805 0107 00000000 		.4byte	0
 2806 010b 00000000 		.4byte	0
 2807              	.LLST9:
 2808 010f 00000000 		.4byte	.LVL18
 2809 0113 04000000 		.4byte	.LVL19
 2810 0117 0100     		.2byte	0x1
 2811 0119 50       		.byte	0x50
 2812 011a 04000000 		.4byte	.LVL19
 2813 011e 10000000 		.4byte	.LFE10
 2814 0122 0400     		.2byte	0x4
 2815 0124 F3       		.byte	0xf3
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 75


 2816 0125 01       		.uleb128 0x1
 2817 0126 50       		.byte	0x50
 2818 0127 9F       		.byte	0x9f
 2819 0128 00000000 		.4byte	0
 2820 012c 00000000 		.4byte	0
 2821              	.LLST10:
 2822 0130 00000000 		.4byte	.LVL20
 2823 0134 07000000 		.4byte	.LVL21-1
 2824 0138 0100     		.2byte	0x1
 2825 013a 50       		.byte	0x50
 2826 013b 07000000 		.4byte	.LVL21-1
 2827 013f 18000000 		.4byte	.LVL22
 2828 0143 0100     		.2byte	0x1
 2829 0145 54       		.byte	0x54
 2830 0146 18000000 		.4byte	.LVL22
 2831 014a 28000000 		.4byte	.LFE11
 2832 014e 0400     		.2byte	0x4
 2833 0150 F3       		.byte	0xf3
 2834 0151 01       		.uleb128 0x1
 2835 0152 50       		.byte	0x50
 2836 0153 9F       		.byte	0x9f
 2837 0154 00000000 		.4byte	0
 2838 0158 00000000 		.4byte	0
 2839              	.LLST11:
 2840 015c 08000000 		.4byte	.LVL21
 2841 0160 21000000 		.4byte	.LVL23-1
 2842 0164 0100     		.2byte	0x1
 2843 0166 50       		.byte	0x50
 2844 0167 00000000 		.4byte	0
 2845 016b 00000000 		.4byte	0
 2846              	.LLST12:
 2847 016f 00000000 		.4byte	.LVL24
 2848 0173 07000000 		.4byte	.LVL25-1
 2849 0177 0100     		.2byte	0x1
 2850 0179 50       		.byte	0x50
 2851 017a 07000000 		.4byte	.LVL25-1
 2852 017e 18000000 		.4byte	.LVL26
 2853 0182 0100     		.2byte	0x1
 2854 0184 54       		.byte	0x54
 2855 0185 18000000 		.4byte	.LVL26
 2856 0189 28000000 		.4byte	.LFE12
 2857 018d 0400     		.2byte	0x4
 2858 018f F3       		.byte	0xf3
 2859 0190 01       		.uleb128 0x1
 2860 0191 50       		.byte	0x50
 2861 0192 9F       		.byte	0x9f
 2862 0193 00000000 		.4byte	0
 2863 0197 00000000 		.4byte	0
 2864              	.LLST13:
 2865 019b 08000000 		.4byte	.LVL25
 2866 019f 21000000 		.4byte	.LVL27-1
 2867 01a3 0100     		.2byte	0x1
 2868 01a5 50       		.byte	0x50
 2869 01a6 00000000 		.4byte	0
 2870 01aa 00000000 		.4byte	0
 2871              	.LLST14:
 2872 01ae 00000000 		.4byte	.LVL28
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 76


 2873 01b2 07000000 		.4byte	.LVL29-1
 2874 01b6 0100     		.2byte	0x1
 2875 01b8 50       		.byte	0x50
 2876 01b9 07000000 		.4byte	.LVL29-1
 2877 01bd 16000000 		.4byte	.LVL30
 2878 01c1 0100     		.2byte	0x1
 2879 01c3 54       		.byte	0x54
 2880 01c4 16000000 		.4byte	.LVL30
 2881 01c8 2C000000 		.4byte	.LFE13
 2882 01cc 0400     		.2byte	0x4
 2883 01ce F3       		.byte	0xf3
 2884 01cf 01       		.uleb128 0x1
 2885 01d0 50       		.byte	0x50
 2886 01d1 9F       		.byte	0x9f
 2887 01d2 00000000 		.4byte	0
 2888 01d6 00000000 		.4byte	0
 2889              	.LLST15:
 2890 01da 08000000 		.4byte	.LVL29
 2891 01de 1F000000 		.4byte	.LVL31-1
 2892 01e2 0100     		.2byte	0x1
 2893 01e4 50       		.byte	0x50
 2894 01e5 00000000 		.4byte	0
 2895 01e9 00000000 		.4byte	0
 2896              	.LLST16:
 2897 01ed 00000000 		.4byte	.LVL32
 2898 01f1 07000000 		.4byte	.LVL33-1
 2899 01f5 0100     		.2byte	0x1
 2900 01f7 50       		.byte	0x50
 2901 01f8 07000000 		.4byte	.LVL33-1
 2902 01fc 16000000 		.4byte	.LVL34
 2903 0200 0100     		.2byte	0x1
 2904 0202 54       		.byte	0x54
 2905 0203 16000000 		.4byte	.LVL34
 2906 0207 28000000 		.4byte	.LFE14
 2907 020b 0400     		.2byte	0x4
 2908 020d F3       		.byte	0xf3
 2909 020e 01       		.uleb128 0x1
 2910 020f 50       		.byte	0x50
 2911 0210 9F       		.byte	0x9f
 2912 0211 00000000 		.4byte	0
 2913 0215 00000000 		.4byte	0
 2914              	.LLST17:
 2915 0219 08000000 		.4byte	.LVL33
 2916 021d 1B000000 		.4byte	.LVL35-1
 2917 0221 0100     		.2byte	0x1
 2918 0223 50       		.byte	0x50
 2919 0224 00000000 		.4byte	0
 2920 0228 00000000 		.4byte	0
 2921              	.LLST18:
 2922 022c 00000000 		.4byte	.LVL36
 2923 0230 02000000 		.4byte	.LVL37
 2924 0234 0100     		.2byte	0x1
 2925 0236 50       		.byte	0x50
 2926 0237 02000000 		.4byte	.LVL37
 2927 023b 10000000 		.4byte	.LFE15
 2928 023f 0400     		.2byte	0x4
 2929 0241 F3       		.byte	0xf3
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 77


 2930 0242 01       		.uleb128 0x1
 2931 0243 50       		.byte	0x50
 2932 0244 9F       		.byte	0x9f
 2933 0245 00000000 		.4byte	0
 2934 0249 00000000 		.4byte	0
 2935              	.LLST19:
 2936 024d 00000000 		.4byte	.LVL38
 2937 0251 07000000 		.4byte	.LVL39-1
 2938 0255 0100     		.2byte	0x1
 2939 0257 50       		.byte	0x50
 2940 0258 07000000 		.4byte	.LVL39-1
 2941 025c 16000000 		.4byte	.LVL40
 2942 0260 0100     		.2byte	0x1
 2943 0262 54       		.byte	0x54
 2944 0263 16000000 		.4byte	.LVL40
 2945 0267 28000000 		.4byte	.LFE17
 2946 026b 0400     		.2byte	0x4
 2947 026d F3       		.byte	0xf3
 2948 026e 01       		.uleb128 0x1
 2949 026f 50       		.byte	0x50
 2950 0270 9F       		.byte	0x9f
 2951 0271 00000000 		.4byte	0
 2952 0275 00000000 		.4byte	0
 2953              	.LLST20:
 2954 0279 08000000 		.4byte	.LVL39
 2955 027d 1B000000 		.4byte	.LVL41-1
 2956 0281 0100     		.2byte	0x1
 2957 0283 50       		.byte	0x50
 2958 0284 00000000 		.4byte	0
 2959 0288 00000000 		.4byte	0
 2960              	.LLST21:
 2961 028c 00000000 		.4byte	.LVL42
 2962 0290 02000000 		.4byte	.LVL43
 2963 0294 0100     		.2byte	0x1
 2964 0296 50       		.byte	0x50
 2965 0297 02000000 		.4byte	.LVL43
 2966 029b 10000000 		.4byte	.LFE18
 2967 029f 0400     		.2byte	0x4
 2968 02a1 F3       		.byte	0xf3
 2969 02a2 01       		.uleb128 0x1
 2970 02a3 50       		.byte	0x50
 2971 02a4 9F       		.byte	0x9f
 2972 02a5 00000000 		.4byte	0
 2973 02a9 00000000 		.4byte	0
 2974              	.LLST22:
 2975 02ad 00000000 		.4byte	.LVL44
 2976 02b1 07000000 		.4byte	.LVL45-1
 2977 02b5 0100     		.2byte	0x1
 2978 02b7 50       		.byte	0x50
 2979 02b8 07000000 		.4byte	.LVL45-1
 2980 02bc 16000000 		.4byte	.LVL46
 2981 02c0 0100     		.2byte	0x1
 2982 02c2 54       		.byte	0x54
 2983 02c3 16000000 		.4byte	.LVL46
 2984 02c7 24000000 		.4byte	.LFE20
 2985 02cb 0400     		.2byte	0x4
 2986 02cd F3       		.byte	0xf3
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 78


 2987 02ce 01       		.uleb128 0x1
 2988 02cf 50       		.byte	0x50
 2989 02d0 9F       		.byte	0x9f
 2990 02d1 00000000 		.4byte	0
 2991 02d5 00000000 		.4byte	0
 2992              	.LLST23:
 2993 02d9 08000000 		.4byte	.LVL45
 2994 02dd 1D000000 		.4byte	.LVL47-1
 2995 02e1 0100     		.2byte	0x1
 2996 02e3 50       		.byte	0x50
 2997 02e4 00000000 		.4byte	0
 2998 02e8 00000000 		.4byte	0
 2999              	.LLST24:
 3000 02ec 00000000 		.4byte	.LVL48
 3001 02f0 02000000 		.4byte	.LVL49
 3002 02f4 0100     		.2byte	0x1
 3003 02f6 50       		.byte	0x50
 3004 02f7 02000000 		.4byte	.LVL49
 3005 02fb 10000000 		.4byte	.LFE21
 3006 02ff 0400     		.2byte	0x4
 3007 0301 F3       		.byte	0xf3
 3008 0302 01       		.uleb128 0x1
 3009 0303 50       		.byte	0x50
 3010 0304 9F       		.byte	0x9f
 3011 0305 00000000 		.4byte	0
 3012 0309 00000000 		.4byte	0
 3013              	.LLST25:
 3014 030d 00000000 		.4byte	.LVL50
 3015 0311 07000000 		.4byte	.LVL51-1
 3016 0315 0100     		.2byte	0x1
 3017 0317 50       		.byte	0x50
 3018 0318 07000000 		.4byte	.LVL51-1
 3019 031c 18000000 		.4byte	.LVL52
 3020 0320 0100     		.2byte	0x1
 3021 0322 54       		.byte	0x54
 3022 0323 18000000 		.4byte	.LVL52
 3023 0327 28000000 		.4byte	.LFE23
 3024 032b 0400     		.2byte	0x4
 3025 032d F3       		.byte	0xf3
 3026 032e 01       		.uleb128 0x1
 3027 032f 50       		.byte	0x50
 3028 0330 9F       		.byte	0x9f
 3029 0331 00000000 		.4byte	0
 3030 0335 00000000 		.4byte	0
 3031              	.LLST26:
 3032 0339 08000000 		.4byte	.LVL51
 3033 033d 21000000 		.4byte	.LVL53-1
 3034 0341 0100     		.2byte	0x1
 3035 0343 50       		.byte	0x50
 3036 0344 00000000 		.4byte	0
 3037 0348 00000000 		.4byte	0
 3038              	.LLST27:
 3039 034c 00000000 		.4byte	.LVL54
 3040 0350 02000000 		.4byte	.LVL55
 3041 0354 0100     		.2byte	0x1
 3042 0356 50       		.byte	0x50
 3043 0357 02000000 		.4byte	.LVL55
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 79


 3044 035b 10000000 		.4byte	.LFE24
 3045 035f 0400     		.2byte	0x4
 3046 0361 F3       		.byte	0xf3
 3047 0362 01       		.uleb128 0x1
 3048 0363 50       		.byte	0x50
 3049 0364 9F       		.byte	0x9f
 3050 0365 00000000 		.4byte	0
 3051 0369 00000000 		.4byte	0
 3052              	.LLST28:
 3053 036d 00000000 		.4byte	.LVL56
 3054 0371 02000000 		.4byte	.LVL57
 3055 0375 0100     		.2byte	0x1
 3056 0377 50       		.byte	0x50
 3057 0378 02000000 		.4byte	.LVL57
 3058 037c 10000000 		.4byte	.LFE26
 3059 0380 0400     		.2byte	0x4
 3060 0382 F3       		.byte	0xf3
 3061 0383 01       		.uleb128 0x1
 3062 0384 50       		.byte	0x50
 3063 0385 9F       		.byte	0x9f
 3064 0386 00000000 		.4byte	0
 3065 038a 00000000 		.4byte	0
 3066              	.LLST29:
 3067 038e 00000000 		.4byte	.LVL58
 3068 0392 07000000 		.4byte	.LVL59-1
 3069 0396 0100     		.2byte	0x1
 3070 0398 50       		.byte	0x50
 3071 0399 07000000 		.4byte	.LVL59-1
 3072 039d 16000000 		.4byte	.LVL60
 3073 03a1 0100     		.2byte	0x1
 3074 03a3 54       		.byte	0x54
 3075 03a4 16000000 		.4byte	.LVL60
 3076 03a8 24000000 		.4byte	.LFE30
 3077 03ac 0400     		.2byte	0x4
 3078 03ae F3       		.byte	0xf3
 3079 03af 01       		.uleb128 0x1
 3080 03b0 50       		.byte	0x50
 3081 03b1 9F       		.byte	0x9f
 3082 03b2 00000000 		.4byte	0
 3083 03b6 00000000 		.4byte	0
 3084              	.LLST30:
 3085 03ba 08000000 		.4byte	.LVL59
 3086 03be 1B000000 		.4byte	.LVL61-1
 3087 03c2 0100     		.2byte	0x1
 3088 03c4 50       		.byte	0x50
 3089 03c5 00000000 		.4byte	0
 3090 03c9 00000000 		.4byte	0
 3091              	.LLST31:
 3092 03cd 00000000 		.4byte	.LVL62
 3093 03d1 07000000 		.4byte	.LVL63-1
 3094 03d5 0100     		.2byte	0x1
 3095 03d7 50       		.byte	0x50
 3096 03d8 07000000 		.4byte	.LVL63-1
 3097 03dc 16000000 		.4byte	.LVL64
 3098 03e0 0100     		.2byte	0x1
 3099 03e2 54       		.byte	0x54
 3100 03e3 16000000 		.4byte	.LVL64
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 80


 3101 03e7 24000000 		.4byte	.LFE31
 3102 03eb 0400     		.2byte	0x4
 3103 03ed F3       		.byte	0xf3
 3104 03ee 01       		.uleb128 0x1
 3105 03ef 50       		.byte	0x50
 3106 03f0 9F       		.byte	0x9f
 3107 03f1 00000000 		.4byte	0
 3108 03f5 00000000 		.4byte	0
 3109              	.LLST32:
 3110 03f9 08000000 		.4byte	.LVL63
 3111 03fd 1D000000 		.4byte	.LVL65-1
 3112 0401 0100     		.2byte	0x1
 3113 0403 50       		.byte	0x50
 3114 0404 00000000 		.4byte	0
 3115 0408 00000000 		.4byte	0
 3116              	.LLST33:
 3117 040c 00000000 		.4byte	.LVL66
 3118 0410 07000000 		.4byte	.LVL67-1
 3119 0414 0100     		.2byte	0x1
 3120 0416 50       		.byte	0x50
 3121 0417 07000000 		.4byte	.LVL67-1
 3122 041b 16000000 		.4byte	.LVL68
 3123 041f 0100     		.2byte	0x1
 3124 0421 54       		.byte	0x54
 3125 0422 16000000 		.4byte	.LVL68
 3126 0426 28000000 		.4byte	.LFE32
 3127 042a 0400     		.2byte	0x4
 3128 042c F3       		.byte	0xf3
 3129 042d 01       		.uleb128 0x1
 3130 042e 50       		.byte	0x50
 3131 042f 9F       		.byte	0x9f
 3132 0430 00000000 		.4byte	0
 3133 0434 00000000 		.4byte	0
 3134              	.LLST34:
 3135 0438 08000000 		.4byte	.LVL67
 3136 043c 1D000000 		.4byte	.LVL69-1
 3137 0440 0100     		.2byte	0x1
 3138 0442 50       		.byte	0x50
 3139 0443 00000000 		.4byte	0
 3140 0447 00000000 		.4byte	0
 3141              	.LLST35:
 3142 044b 00000000 		.4byte	.LVL70
 3143 044f 07000000 		.4byte	.LVL71-1
 3144 0453 0100     		.2byte	0x1
 3145 0455 50       		.byte	0x50
 3146 0456 07000000 		.4byte	.LVL71-1
 3147 045a 16000000 		.4byte	.LVL72
 3148 045e 0100     		.2byte	0x1
 3149 0460 54       		.byte	0x54
 3150 0461 16000000 		.4byte	.LVL72
 3151 0465 24000000 		.4byte	.LFE33
 3152 0469 0400     		.2byte	0x4
 3153 046b F3       		.byte	0xf3
 3154 046c 01       		.uleb128 0x1
 3155 046d 50       		.byte	0x50
 3156 046e 9F       		.byte	0x9f
 3157 046f 00000000 		.4byte	0
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 81


 3158 0473 00000000 		.4byte	0
 3159              	.LLST36:
 3160 0477 08000000 		.4byte	.LVL71
 3161 047b 1D000000 		.4byte	.LVL73-1
 3162 047f 0100     		.2byte	0x1
 3163 0481 50       		.byte	0x50
 3164 0482 00000000 		.4byte	0
 3165 0486 00000000 		.4byte	0
 3166              	.LLST37:
 3167 048a 00000000 		.4byte	.LVL74
 3168 048e 07000000 		.4byte	.LVL75-1
 3169 0492 0100     		.2byte	0x1
 3170 0494 50       		.byte	0x50
 3171 0495 07000000 		.4byte	.LVL75-1
 3172 0499 16000000 		.4byte	.LVL76
 3173 049d 0100     		.2byte	0x1
 3174 049f 54       		.byte	0x54
 3175 04a0 16000000 		.4byte	.LVL76
 3176 04a4 24000000 		.4byte	.LFE34
 3177 04a8 0400     		.2byte	0x4
 3178 04aa F3       		.byte	0xf3
 3179 04ab 01       		.uleb128 0x1
 3180 04ac 50       		.byte	0x50
 3181 04ad 9F       		.byte	0x9f
 3182 04ae 00000000 		.4byte	0
 3183 04b2 00000000 		.4byte	0
 3184              	.LLST38:
 3185 04b6 08000000 		.4byte	.LVL75
 3186 04ba 1D000000 		.4byte	.LVL77-1
 3187 04be 0100     		.2byte	0x1
 3188 04c0 50       		.byte	0x50
 3189 04c1 00000000 		.4byte	0
 3190 04c5 00000000 		.4byte	0
 3191              	.LLST39:
 3192 04c9 00000000 		.4byte	.LVL78
 3193 04cd 09000000 		.4byte	.LVL79-1
 3194 04d1 0100     		.2byte	0x1
 3195 04d3 50       		.byte	0x50
 3196 04d4 09000000 		.4byte	.LVL79-1
 3197 04d8 0C000000 		.4byte	.LVL80
 3198 04dc 0100     		.2byte	0x1
 3199 04de 54       		.byte	0x54
 3200 04df 0C000000 		.4byte	.LVL80
 3201 04e3 1C000000 		.4byte	.LFE35
 3202 04e7 0400     		.2byte	0x4
 3203 04e9 F3       		.byte	0xf3
 3204 04ea 01       		.uleb128 0x1
 3205 04eb 50       		.byte	0x50
 3206 04ec 9F       		.byte	0x9f
 3207 04ed 00000000 		.4byte	0
 3208 04f1 00000000 		.4byte	0
 3209              	.LLST40:
 3210 04f5 00000000 		.4byte	.LVL78
 3211 04f9 09000000 		.4byte	.LVL79-1
 3212 04fd 0100     		.2byte	0x1
 3213 04ff 51       		.byte	0x51
 3214 0500 09000000 		.4byte	.LVL79-1
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 82


 3215 0504 14000000 		.4byte	.LVL82
 3216 0508 0100     		.2byte	0x1
 3217 050a 55       		.byte	0x55
 3218 050b 14000000 		.4byte	.LVL82
 3219 050f 1C000000 		.4byte	.LFE35
 3220 0513 0400     		.2byte	0x4
 3221 0515 F3       		.byte	0xf3
 3222 0516 01       		.uleb128 0x1
 3223 0517 51       		.byte	0x51
 3224 0518 9F       		.byte	0x9f
 3225 0519 00000000 		.4byte	0
 3226 051d 00000000 		.4byte	0
 3227              	.LLST41:
 3228 0521 0A000000 		.4byte	.LVL79
 3229 0525 13000000 		.4byte	.LVL81-1
 3230 0529 0100     		.2byte	0x1
 3231 052b 50       		.byte	0x50
 3232 052c 00000000 		.4byte	0
 3233 0530 00000000 		.4byte	0
 3234              	.LLST42:
 3235 0534 06000000 		.4byte	.LVL83
 3236 0538 13000000 		.4byte	.LVL84-1
 3237 053c 0100     		.2byte	0x1
 3238 053e 50       		.byte	0x50
 3239 053f 00000000 		.4byte	0
 3240 0543 00000000 		.4byte	0
 3241              		.section	.debug_aranges,"",%progbits
 3242 0000 54010000 		.4byte	0x154
 3243 0004 0200     		.2byte	0x2
 3244 0006 00000000 		.4byte	.Ldebug_info0
 3245 000a 04       		.byte	0x4
 3246 000b 00       		.byte	0
 3247 000c 0000     		.2byte	0
 3248 000e 0000     		.2byte	0
 3249 0010 00000000 		.4byte	.LFB5
 3250 0014 1C000000 		.4byte	.LFE5-.LFB5
 3251 0018 00000000 		.4byte	.LFB6
 3252 001c 28000000 		.4byte	.LFE6-.LFB6
 3253 0020 00000000 		.4byte	.LFB7
 3254 0024 28000000 		.4byte	.LFE7-.LFB7
 3255 0028 00000000 		.4byte	.LFB8
 3256 002c 28000000 		.4byte	.LFE8-.LFB8
 3257 0030 00000000 		.4byte	.LFB9
 3258 0034 2C000000 		.4byte	.LFE9-.LFB9
 3259 0038 00000000 		.4byte	.LFB10
 3260 003c 10000000 		.4byte	.LFE10-.LFB10
 3261 0040 00000000 		.4byte	.LFB11
 3262 0044 28000000 		.4byte	.LFE11-.LFB11
 3263 0048 00000000 		.4byte	.LFB12
 3264 004c 28000000 		.4byte	.LFE12-.LFB12
 3265 0050 00000000 		.4byte	.LFB13
 3266 0054 2C000000 		.4byte	.LFE13-.LFB13
 3267 0058 00000000 		.4byte	.LFB14
 3268 005c 28000000 		.4byte	.LFE14-.LFB14
 3269 0060 00000000 		.4byte	.LFB15
 3270 0064 10000000 		.4byte	.LFE15-.LFB15
 3271 0068 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 83


 3272 006c 10000000 		.4byte	.LFE16-.LFB16
 3273 0070 00000000 		.4byte	.LFB17
 3274 0074 28000000 		.4byte	.LFE17-.LFB17
 3275 0078 00000000 		.4byte	.LFB18
 3276 007c 10000000 		.4byte	.LFE18-.LFB18
 3277 0080 00000000 		.4byte	.LFB19
 3278 0084 10000000 		.4byte	.LFE19-.LFB19
 3279 0088 00000000 		.4byte	.LFB20
 3280 008c 24000000 		.4byte	.LFE20-.LFB20
 3281 0090 00000000 		.4byte	.LFB21
 3282 0094 10000000 		.4byte	.LFE21-.LFB21
 3283 0098 00000000 		.4byte	.LFB22
 3284 009c 10000000 		.4byte	.LFE22-.LFB22
 3285 00a0 00000000 		.4byte	.LFB23
 3286 00a4 28000000 		.4byte	.LFE23-.LFB23
 3287 00a8 00000000 		.4byte	.LFB24
 3288 00ac 10000000 		.4byte	.LFE24-.LFB24
 3289 00b0 00000000 		.4byte	.LFB25
 3290 00b4 10000000 		.4byte	.LFE25-.LFB25
 3291 00b8 00000000 		.4byte	.LFB26
 3292 00bc 10000000 		.4byte	.LFE26-.LFB26
 3293 00c0 00000000 		.4byte	.LFB27
 3294 00c4 10000000 		.4byte	.LFE27-.LFB27
 3295 00c8 00000000 		.4byte	.LFB28
 3296 00cc 10000000 		.4byte	.LFE28-.LFB28
 3297 00d0 00000000 		.4byte	.LFB29
 3298 00d4 10000000 		.4byte	.LFE29-.LFB29
 3299 00d8 00000000 		.4byte	.LFB30
 3300 00dc 24000000 		.4byte	.LFE30-.LFB30
 3301 00e0 00000000 		.4byte	.LFB31
 3302 00e4 24000000 		.4byte	.LFE31-.LFB31
 3303 00e8 00000000 		.4byte	.LFB32
 3304 00ec 28000000 		.4byte	.LFE32-.LFB32
 3305 00f0 00000000 		.4byte	.LFB33
 3306 00f4 24000000 		.4byte	.LFE33-.LFB33
 3307 00f8 00000000 		.4byte	.LFB34
 3308 00fc 24000000 		.4byte	.LFE34-.LFB34
 3309 0100 00000000 		.4byte	.LFB35
 3310 0104 1C000000 		.4byte	.LFE35-.LFB35
 3311 0108 00000000 		.4byte	.LFB3
 3312 010c 24000000 		.4byte	.LFE3-.LFB3
 3313 0110 00000000 		.4byte	.LFB36
 3314 0114 14000000 		.4byte	.LFE36-.LFB36
 3315 0118 00000000 		.4byte	.LFB37
 3316 011c 0C000000 		.4byte	.LFE37-.LFB37
 3317 0120 00000000 		.4byte	.LFB2
 3318 0124 48000000 		.4byte	.LFE2-.LFB2
 3319 0128 00000000 		.4byte	.LFB4
 3320 012c 20000000 		.4byte	.LFE4-.LFB4
 3321 0130 00000000 		.4byte	.LFB38
 3322 0134 0C000000 		.4byte	.LFE38-.LFB38
 3323 0138 00000000 		.4byte	.LFB39
 3324 013c 0C000000 		.4byte	.LFE39-.LFB39
 3325 0140 00000000 		.4byte	.LFB40
 3326 0144 0C000000 		.4byte	.LFE40-.LFB40
 3327 0148 00000000 		.4byte	.LFB41
 3328 014c 0C000000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 84


 3329 0150 00000000 		.4byte	0
 3330 0154 00000000 		.4byte	0
 3331              		.section	.debug_ranges,"",%progbits
 3332              	.Ldebug_ranges0:
 3333 0000 00000000 		.4byte	.LFB5
 3334 0004 1C000000 		.4byte	.LFE5
 3335 0008 00000000 		.4byte	.LFB6
 3336 000c 28000000 		.4byte	.LFE6
 3337 0010 00000000 		.4byte	.LFB7
 3338 0014 28000000 		.4byte	.LFE7
 3339 0018 00000000 		.4byte	.LFB8
 3340 001c 28000000 		.4byte	.LFE8
 3341 0020 00000000 		.4byte	.LFB9
 3342 0024 2C000000 		.4byte	.LFE9
 3343 0028 00000000 		.4byte	.LFB10
 3344 002c 10000000 		.4byte	.LFE10
 3345 0030 00000000 		.4byte	.LFB11
 3346 0034 28000000 		.4byte	.LFE11
 3347 0038 00000000 		.4byte	.LFB12
 3348 003c 28000000 		.4byte	.LFE12
 3349 0040 00000000 		.4byte	.LFB13
 3350 0044 2C000000 		.4byte	.LFE13
 3351 0048 00000000 		.4byte	.LFB14
 3352 004c 28000000 		.4byte	.LFE14
 3353 0050 00000000 		.4byte	.LFB15
 3354 0054 10000000 		.4byte	.LFE15
 3355 0058 00000000 		.4byte	.LFB16
 3356 005c 10000000 		.4byte	.LFE16
 3357 0060 00000000 		.4byte	.LFB17
 3358 0064 28000000 		.4byte	.LFE17
 3359 0068 00000000 		.4byte	.LFB18
 3360 006c 10000000 		.4byte	.LFE18
 3361 0070 00000000 		.4byte	.LFB19
 3362 0074 10000000 		.4byte	.LFE19
 3363 0078 00000000 		.4byte	.LFB20
 3364 007c 24000000 		.4byte	.LFE20
 3365 0080 00000000 		.4byte	.LFB21
 3366 0084 10000000 		.4byte	.LFE21
 3367 0088 00000000 		.4byte	.LFB22
 3368 008c 10000000 		.4byte	.LFE22
 3369 0090 00000000 		.4byte	.LFB23
 3370 0094 28000000 		.4byte	.LFE23
 3371 0098 00000000 		.4byte	.LFB24
 3372 009c 10000000 		.4byte	.LFE24
 3373 00a0 00000000 		.4byte	.LFB25
 3374 00a4 10000000 		.4byte	.LFE25
 3375 00a8 00000000 		.4byte	.LFB26
 3376 00ac 10000000 		.4byte	.LFE26
 3377 00b0 00000000 		.4byte	.LFB27
 3378 00b4 10000000 		.4byte	.LFE27
 3379 00b8 00000000 		.4byte	.LFB28
 3380 00bc 10000000 		.4byte	.LFE28
 3381 00c0 00000000 		.4byte	.LFB29
 3382 00c4 10000000 		.4byte	.LFE29
 3383 00c8 00000000 		.4byte	.LFB30
 3384 00cc 24000000 		.4byte	.LFE30
 3385 00d0 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 85


 3386 00d4 24000000 		.4byte	.LFE31
 3387 00d8 00000000 		.4byte	.LFB32
 3388 00dc 28000000 		.4byte	.LFE32
 3389 00e0 00000000 		.4byte	.LFB33
 3390 00e4 24000000 		.4byte	.LFE33
 3391 00e8 00000000 		.4byte	.LFB34
 3392 00ec 24000000 		.4byte	.LFE34
 3393 00f0 00000000 		.4byte	.LFB35
 3394 00f4 1C000000 		.4byte	.LFE35
 3395 00f8 00000000 		.4byte	.LFB3
 3396 00fc 24000000 		.4byte	.LFE3
 3397 0100 00000000 		.4byte	.LFB36
 3398 0104 14000000 		.4byte	.LFE36
 3399 0108 00000000 		.4byte	.LFB37
 3400 010c 0C000000 		.4byte	.LFE37
 3401 0110 00000000 		.4byte	.LFB2
 3402 0114 48000000 		.4byte	.LFE2
 3403 0118 00000000 		.4byte	.LFB4
 3404 011c 20000000 		.4byte	.LFE4
 3405 0120 00000000 		.4byte	.LFB38
 3406 0124 0C000000 		.4byte	.LFE38
 3407 0128 00000000 		.4byte	.LFB39
 3408 012c 0C000000 		.4byte	.LFE39
 3409 0130 00000000 		.4byte	.LFB40
 3410 0134 0C000000 		.4byte	.LFE40
 3411 0138 00000000 		.4byte	.LFB41
 3412 013c 0C000000 		.4byte	.LFE41
 3413 0140 00000000 		.4byte	0
 3414 0144 00000000 		.4byte	0
 3415              		.section	.debug_line,"",%progbits
 3416              	.Ldebug_line0:
 3417 0000 7A030000 		.section	.debug_str,"MS",%progbits,1
 3417      02004D00 
 3417      00000201 
 3417      FB0E0D00 
 3417      01010101 
 3418              	.LASF37:
 3419 0000 636F756E 		.ascii	"count\000"
 3419      7400
 3420              	.LASF66:
 3421 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3421      456E6162 
 3421      6C6500
 3422              	.LASF81:
 3423 0011 43794578 		.ascii	"CyExitCriticalSection\000"
 3423      69744372 
 3423      69746963 
 3423      616C5365 
 3423      6374696F 
 3424              	.LASF28:
 3425 0027 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3425      53657450 
 3425      574D5379 
 3425      6E634B69 
 3425      6C6C00
 3426              	.LASF41:
 3427 003a 70657269 		.ascii	"period\000"
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 86


 3427      6F6400
 3428              	.LASF7:
 3429 0041 6C6F6E67 		.ascii	"long long unsigned int\000"
 3429      206C6F6E 
 3429      6720756E 
 3429      7369676E 
 3429      65642069 
 3430              	.LASF58:
 3431 0058 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3431      53657443 
 3431      61707475 
 3431      72654D6F 
 3431      646500
 3432              	.LASF21:
 3433 006b 71644D6F 		.ascii	"qdMode\000"
 3433      646500
 3434              	.LASF36:
 3435 0072 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3435      57726974 
 3435      65436F75 
 3435      6E746572 
 3435      00
 3436              	.LASF42:
 3437 0083 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3437      52656164 
 3437      436F756E 
 3437      74657200 
 3438              	.LASF6:
 3439 0093 6C6F6E67 		.ascii	"long long int\000"
 3439      206C6F6E 
 3439      6720696E 
 3439      7400
 3440              	.LASF0:
 3441 00a1 7369676E 		.ascii	"signed char\000"
 3441      65642063 
 3441      68617200 
 3442              	.LASF53:
 3443 00ad 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3443      57726974 
 3443      65436F6D 
 3443      70617265 
 3443      42756600 
 3444              	.LASF68:
 3445 00c1 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3445      53657449 
 3445      6E746572 
 3445      72757074 
 3445      4D6F6465 
 3446              	.LASF74:
 3447 00d6 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3447      436C6561 
 3447      72496E74 
 3447      65727275 
 3447      707400
 3448              	.LASF77:
 3449 00e9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 3449      6E657261 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 87


 3449      7465645F 
 3449      536F7572 
 3449      63655C50 
 3450              	.LASF4:
 3451 0108 6C6F6E67 		.ascii	"long int\000"
 3451      20696E74 
 3451      00
 3452              	.LASF9:
 3453 0111 75696E74 		.ascii	"uint8\000"
 3453      3800
 3454              	.LASF12:
 3455 0117 646F7562 		.ascii	"double\000"
 3455      6C6500
 3456              	.LASF55:
 3457 011e 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3457      52656164 
 3457      436F6D70 
 3457      61726542 
 3457      756600
 3458              	.LASF44:
 3459 0131 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3459      53657443 
 3459      6F6D7061 
 3459      72655377 
 3459      617000
 3460              	.LASF16:
 3461 0144 50574D5F 		.ascii	"PWM_Stop\000"
 3461      53746F70 
 3461      00
 3462              	.LASF34:
 3463 014d 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3463      53657450 
 3463      574D496E 
 3463      76657274 
 3463      00
 3464              	.LASF10:
 3465 015e 75696E74 		.ascii	"uint32\000"
 3465      333200
 3466              	.LASF61:
 3467 0165 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3467      53657453 
 3467      74617274 
 3467      4D6F6465 
 3467      00
 3468              	.LASF59:
 3469 0176 74726967 		.ascii	"triggerMode\000"
 3469      6765724D 
 3469      6F646500 
 3470              	.LASF35:
 3471 0182 6D61736B 		.ascii	"mask\000"
 3471      00
 3472              	.LASF67:
 3473 0187 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3473      52656164 
 3473      53746174 
 3473      757300
 3474              	.LASF33:
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 88


 3475 0196 64656164 		.ascii	"deadTime\000"
 3475      54696D65 
 3475      00
 3476              	.LASF62:
 3477 019f 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3477      53657453 
 3477      746F704D 
 3477      6F646500 
 3478              	.LASF8:
 3479 01af 756E7369 		.ascii	"unsigned int\000"
 3479      676E6564 
 3479      20696E74 
 3479      00
 3480              	.LASF32:
 3481 01bc 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3481      53657450 
 3481      574D4465 
 3481      61645469 
 3481      6D6500
 3482              	.LASF65:
 3483 01cf 636F6D6D 		.ascii	"command\000"
 3483      616E6400 
 3484              	.LASF5:
 3485 01d7 6C6F6E67 		.ascii	"long unsigned int\000"
 3485      20756E73 
 3485      69676E65 
 3485      6420696E 
 3485      7400
 3486              	.LASF27:
 3487 01e9 6D6F6465 		.ascii	"modeMask\000"
 3487      4D61736B 
 3487      00
 3488              	.LASF80:
 3489 01f2 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3489      74657243 
 3489      72697469 
 3489      63616C53 
 3489      65637469 
 3490              	.LASF3:
 3491 0209 73686F72 		.ascii	"short unsigned int\000"
 3491      7420756E 
 3491      7369676E 
 3491      65642069 
 3491      6E7400
 3492              	.LASF22:
 3493 021c 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3493      53657450 
 3493      72657363 
 3493      616C6572 
 3493      00
 3494              	.LASF25:
 3495 022d 6F6E6553 		.ascii	"oneShotEnable\000"
 3495      686F7445 
 3495      6E61626C 
 3495      6500
 3496              	.LASF64:
 3497 023b 50574D5F 		.ascii	"PWM_TriggerCommand\000"
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 89


 3497      54726967 
 3497      67657243 
 3497      6F6D6D61 
 3497      6E6400
 3498              	.LASF50:
 3499 024e 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3499      57726974 
 3499      65436F6D 
 3499      70617265 
 3499      00
 3500              	.LASF40:
 3501 025f 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3501      57726974 
 3501      65506572 
 3501      696F6400 
 3502              	.LASF14:
 3503 026f 72656733 		.ascii	"reg32\000"
 3503      3200
 3504              	.LASF79:
 3505 0275 50574D5F 		.ascii	"PWM_initVar\000"
 3505      696E6974 
 3505      56617200 
 3506              	.LASF43:
 3507 0281 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3507      52656164 
 3507      50657269 
 3507      6F6400
 3508              	.LASF15:
 3509 0290 73697A65 		.ascii	"sizetype\000"
 3509      74797065 
 3509      00
 3510              	.LASF29:
 3511 0299 73796E63 		.ascii	"syncKillEnable\000"
 3511      4B696C6C 
 3511      456E6162 
 3511      6C6500
 3512              	.LASF51:
 3513 02a8 636F6D70 		.ascii	"compare\000"
 3513      61726500 
 3514              	.LASF24:
 3515 02b0 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3515      5365744F 
 3515      6E655368 
 3515      6F7400
 3516              	.LASF48:
 3517 02bf 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3517      52656164 
 3517      50657269 
 3517      6F644275 
 3517      6600
 3518              	.LASF76:
 3519 02d1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3519      4320342E 
 3519      392E3320 
 3519      32303135 
 3519      30333033 
 3520 0304 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 90


 3520      20726576 
 3520      6973696F 
 3520      6E203232 
 3520      31323230 
 3521 0337 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3521      66756E63 
 3521      74696F6E 
 3521      2D736563 
 3521      74696F6E 
 3522              	.LASF11:
 3523 035f 666C6F61 		.ascii	"float\000"
 3523      7400
 3524              	.LASF23:
 3525 0365 70726573 		.ascii	"prescaler\000"
 3525      63616C65 
 3525      7200
 3526              	.LASF78:
 3527 036f 433A5C55 		.ascii	"C:\\Users\\sunyi\\Desktop\\Workspace01\\BLE Lab 2.c"
 3527      73657273 
 3527      5C73756E 
 3527      79695C44 
 3527      65736B74 
 3528 039d 7964736E 		.ascii	"ydsn\000"
 3528      00
 3529              	.LASF56:
 3530 03a2 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3530      52656164 
 3530      43617074 
 3530      75726500 
 3531              	.LASF49:
 3532 03b2 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3532      53657450 
 3532      6572696F 
 3532      64537761 
 3532      7000
 3533              	.LASF1:
 3534 03c4 756E7369 		.ascii	"unsigned char\000"
 3534      676E6564 
 3534      20636861 
 3534      7200
 3535              	.LASF70:
 3536 03d2 50574D5F 		.ascii	"PWM_Init\000"
 3536      496E6974 
 3536      00
 3537              	.LASF31:
 3538 03db 73746F70 		.ascii	"stopOnKillEnable\000"
 3538      4F6E4B69 
 3538      6C6C456E 
 3538      61626C65 
 3538      00
 3539              	.LASF26:
 3540 03ec 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3540      53657450 
 3540      574D4D6F 
 3540      646500
 3541              	.LASF2:
 3542 03fb 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 91


 3542      7420696E 
 3542      7400
 3543              	.LASF72:
 3544 0405 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3544      47657449 
 3544      6E746572 
 3544      72757074 
 3544      536F7572 
 3545              	.LASF69:
 3546 0422 696E7465 		.ascii	"interruptMask\000"
 3546      72727570 
 3546      744D6173 
 3546      6B00
 3547              	.LASF71:
 3548 0430 50574D5F 		.ascii	"PWM_Start\000"
 3548      53746172 
 3548      7400
 3549              	.LASF46:
 3550 043a 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3550      57726974 
 3550      65506572 
 3550      696F6442 
 3550      756600
 3551              	.LASF19:
 3552 044d 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3552      53657451 
 3552      444D6F64 
 3552      6500
 3553              	.LASF13:
 3554 045b 63686172 		.ascii	"char\000"
 3554      00
 3555              	.LASF20:
 3556 0460 6D6F6465 		.ascii	"mode\000"
 3556      00
 3557              	.LASF75:
 3558 0465 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3558      53657449 
 3558      6E746572 
 3558      72757074 
 3558      00
 3559              	.LASF60:
 3560 0476 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3560      53657452 
 3560      656C6F61 
 3560      644D6F64 
 3560      6500
 3561              	.LASF39:
 3562 0488 636F756E 		.ascii	"counterMode\000"
 3562      7465724D 
 3562      6F646500 
 3563              	.LASF54:
 3564 0494 636F6D70 		.ascii	"compareBuf\000"
 3564      61726542 
 3564      756600
 3565              	.LASF47:
 3566 049f 70657269 		.ascii	"periodBuf\000"
 3566      6F644275 
ARM GAS  C:\Users\sunyi\AppData\Local\Temp\ccaHIROV.s 			page 92


 3566      6600
 3567              	.LASF57:
 3568 04a9 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3568      52656164 
 3568      43617074 
 3568      75726542 
 3568      756600
 3569              	.LASF18:
 3570 04bc 656E6162 		.ascii	"enableInterrupts\000"
 3570      6C65496E 
 3570      74657272 
 3570      75707473 
 3570      00
 3571              	.LASF63:
 3572 04cd 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3572      53657443 
 3572      6F756E74 
 3572      4D6F6465 
 3572      00
 3573              	.LASF17:
 3574 04de 50574D5F 		.ascii	"PWM_SetMode\000"
 3574      5365744D 
 3574      6F646500 
 3575              	.LASF30:
 3576 04ea 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3576      53657450 
 3576      574D5374 
 3576      6F704F6E 
 3576      4B696C6C 
 3577              	.LASF45:
 3578 04ff 73776170 		.ascii	"swapEnable\000"
 3578      456E6162 
 3578      6C6500
 3579              	.LASF73:
 3580 050a 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3580      47657449 
 3580      6E746572 
 3580      72757074 
 3580      536F7572 
 3581              	.LASF38:
 3582 0521 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3582      53657443 
 3582      6F756E74 
 3582      65724D6F 
 3582      646500
 3583              	.LASF52:
 3584 0534 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3584      52656164 
 3584      436F6D70 
 3584      61726500 
 3585              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
